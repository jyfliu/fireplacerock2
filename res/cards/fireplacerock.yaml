---
mew:
  name: Mew
  type: monster
  cost: 2
  attack: 200
  health: 200
  flavour: Apparently, it appears only to those people who are pure of heart and have
    a strong desire to see it.
  description: Once per turn, you can pay 1 mana, this card’s activated effect becomes
    another face-up monster’s activated effect for rest this turn (you pay its cost).
  id: 0
  rarity: UR
  can_activate: |-
    if self.has_status("MEW_ACTIVATED_EFFECT"):
      if hasattr(self.mimic, "can_activate"):
        retval = self.interp(self.mimic.can_activate)
      else:
        retval = False
    else:
      retval = can_select_field(lambda x: x != self) and owner.can_pay(1)
  on_activate_cost: |-
    if self.has_status("MEW_ACTIVATED_EFFECT"):
      if hasattr(self.mimic, "on_activate_cost"):
        self.interp(self.mimic.on_activate_cost)
    else:
      owner.pay(1)
      self.target = select_field(lambda x: x != self)
  on_activate: |-
    if self.has_status("MEW_ACTIVATED_EFFECT"):
      if hasattr(self.mimic, "on_activate"):
        self.interp(self.mimic.on_activate)
    else:
      self.mimic = self.target.template
      print(self.target)
      self.apply_status(self, "MEW_ACTIVATED_EFFECT", 0, "END")
  uuid: mew
unown:
  name: Unown
  type: monster
  cost: 1
  attack: 0
  health: 100
  flavour: Unown is just like Man; it dies to Pokemon with move. But for those who
    are unprepared for Man's—or rather, Unown's, for they are one and the same—unpredictability,
    they too will fall.
  description: When this card is summoned, its name changes randomly.
  id: 1
  rarity: R
  if_summon: |-
    c = random.randrange(28)
    if c == 26: self.change_name("Unown !")
    elif c == 27: self.change_name("Unown ?")
    else: self.change_name("Unown " + chr(c+ord("A")))
  uuid: unown
sprightelf:
  name: Spright Elf
  type: monster
  cost: 2
  attack: 200
  health: 200
  description: |-
    Link: 1 2-cost monster + 1 other monster. You can pay 1 mana; summon a 2 cost monster
    from your graveyard to an adjacent space. While this card is on your field, adjacent
    2-cost monsters on your field cannot be targeted.
  id: 2
  rarity: UR
  can_summon_extradeck: |-
    retval = can_link(
      lambda card: card.cost == 2,
      lambda card: True,
    )
  summon_extradeck: |-
    link(
      lambda card: card.cost == 2,
      lambda card: True,
    )
  can_summon: retval = False
  can_activate: |-
    retval = (
      owner.can_pay(1)
      and owner.graveyard.contains(lambda card: card.cost == 2 and card.can("summon"))
      and can_select_owner_board(get_adjacent_board_idxs())
    )
  on_activate_cost: |-
    owner.pay(1)
  on_activate: |-
    card = select_owner_graveyard(lambda card: card.type == "monster" and card.cost == 2 and card.can("summon"))
    idx = select_owner_board(get_adjacent_board_idxs())
    io.summon(card, idx)
  uuid: sprightelf
magikarp:
  name: Magikarp
  type: monster
  cost: 0
  attack: 0
  health: 200
  flavour: Magikarp is a pathetic excuse for a Pokémon that is only capable of flopping
    and splashing. This behavior prompted scientists to undertake research into it.
  description: ''
  id: 3
  rarity: C
  uuid: magikarp
mudkip:
  name: Mudkip
  type: monster
  cost: 1
  attack: 100
  health: 200
  flavour: To alert it, the fin on its head senses the flow of water. It has the strength
    to lift boulders.
  description: ''
  id: 4
  rarity: C
  uuid: mudkip
pikachu:
  name: Pikachu
  type: monster
  cost: 1
  attack: 200
  health: 100
  flavour: It lives in forests with others. It stores electricity in the pouches on
    its cheeks.
  description: ''
  id: 5
  rarity: R
  uuid: pikachu
grovyle:
  name: Grovyle
  type: monster
  cost: 2
  attack: 300
  health: 200
  flavour: It lives in dense jungles. While closing in on its prey, it leaps from
    branch to branch.
  description: ''
  id: 6
  rarity: C
  uuid: grovyle
ampharos:
  name: Ampharos
  type: monster
  cost: 3
  attack: 300
  health: 400
  flavour: The bright light on its tail can be seen far away. It has been treasured
    since ancient times as a beacon.
  description: ''
  id: 7
  rarity: C
  uuid: ampharos
blastoise:
  name: Blastoise
  type: monster
  cost: 4
  attack: 400
  health: 500
  flavour: The rocket cannons on its shell fire jets of water capable of punching
    holes through thick steel.
  description: ''
  id: 8
  rarity: C
  uuid: blastoise
wailord:
  name: Wailord
  type: monster
  cost: 4
  attack: 200
  health: 600
  flavour: It can sometimes knock out opponents with the shock created by breaching
    and crashing its big body onto the water.
  description: ''
  id: 9
  rarity: R
  uuid: wailord
snorlax:
  name: Snorlax
  type: monster
  cost: 5
  attack: 400
  health: 700
  flavour: Very lazy. Just eats and sleeps. As its rotund bulk builds, it becomes
    steadily more slothful.
  description: ''
  id: 10
  rarity: C
  uuid: snorlax
garchomp:
  name: Garchomp
  type: monster
  cost: 6
  attack: 600
  health: 700
  flavour: It flies at speeds equal to a jet fighter plane. It never allows its prey
    to escape.
  description: ''
  id: 11
  rarity: C
  uuid: garchomp
jirachi:
  name: Jirachi
  type: monster
  cost: 6
  attack: 400
  health: 800
  flavour: 'Once Jeffrey got iron head-flinched 5 times in a row: “skill diff”'
  description: 'When this card is about to attack a monster: Flip two coins. If both
    are heads then the monster can no longer attack.'
  id: 12
  rarity: R
  if_attack: |-
    c1 = flip_coin()
    c2 = flip_coin()
    if c1 and c2:
      args[0].apply_status(self, "CANNOT_ATTACK", -1)
  uuid: jirachi
hooh:
  name: Ho-oh
  type: monster
  cost: 7
  attack: 700
  health: 700
  flavour: It will reveal itself before a pure-hearted trainer by shining its bright
    rainbow-colored wings.
  description: 'When this card is about to attack a monster: Half the other monster''s
    attack'
  id: 13
  rarity: SR
  if_attack: args[0].set(source=self, attack=args[0].attack // 2)
  uuid: hooh
kyogre:
  name: Kyogre
  type: monster
  cost: 8
  attack: 800
  health: 1000
  flavour: It is said to have widened the seas by causing downpours. It had been asleep
    in a marine trench.
  description: 'When this card is summoned: Change both player’s field spells to Rainy
    Day.'
  id: 14
  rarity: R
  uuid: kyogre
groudon:
  name: Groudon
  type: monster
  cost: 8
  attack: 800
  health: 1000
  flavour: It had been asleep in underground magma ever since it fiercely fought Kyogre
    long ago.
  description: 'When this card is summoned: Change both player’s field spells to Harsh
    Sunlight.'
  id: 15
  rarity: R
  uuid: groudon
giratina:
  name: Giratina
  type: monster
  cost: 9
  attack: 800
  health: 1200
  flavour: It was banished for its violence. It silently gazed upon the old world
    from the Distortion World.
  description: When a card would be destroyed as a result of battle with this card,
    banish it instead.
  id: 16
  rarity: R
  uuid: giratina
arceus:
  name: Arceus
  type: monster
  cost: 10
  attack: 1200
  health: 1200
  flavour: It emerged from an egg in a place where there was nothing, then shaped
    the world.
  description: 'Once while face-up on the field: You can send all other cards on the
    field to the graveyard.'
  id: 17
  rarity: SR
  can_activate: retval = not self.has_status("ARCEUS_ACTIVATED_EFFECT")
  on_activate: |-
    if not self.has_status("ARCEUS_ACTIVATED_EFFECT"):
      to_gy = []
      for card in owner.board:
        if card != self and card is not None:
          to_gy.append(card)
      for card in oppon.board:
        if card is not None:
          to_gy.append(card)
      io.send_graveyard_multiple(to_gy)
      self.apply_status(self, "ARCEUS_ACTIVATED_EFFECT", -1)
  uuid: arceus
gallade:
  name: Gallade
  type: monster
  cost: 2
  attack: 200
  health: 300
  flavour: A master of courtesy and swordsmanship, it fights using the extending swords
    on its elbows.
  description: 'On attack declaration, flip a coin: if heads, this attack will deal
    2x the attack of this monster.'
  if_attack: self.double_dmg = flip_coin()
  if_attack_directly: self.double_dmg = flip_coin()
  attacker_damage_calc: |-
    if self.double_dmg:
      retval = self.attack * 2
    else:
      retval = self.attack
  attacker_direct_damage_calc: |-
    if self.double_dmg:
      retval = self.attack * 2
    else:
      retval = self.attack
  id: 18
  rarity: C
  uuid: gallade
heracross:
  name: Heracross
  type: monster
  cost: 3
  attack: 500
  health: 300
  flavour: It loves sweet honey. To keep all the honey to itself, it hurls rivals
    away with its prized horn.
  description: 'On attack declaration, flip a coin: if tails, this attack misses and
    deals no damage (this card still takes recoil).'
  if_attack: self.no_dmg = not flip_coin()
  if_attack_directly: self.no_dmg = not flip_coin()
  attacker_damage_calc: |-
    if self.no_dmg:
      retval = 0
    else:
      retval = self.attack
  attacker_direct_damage_calc: |-
    if self.no_dmg:
      retval = 0
    else:
      retval = self.attack
  id: 19
  rarity: C
  uuid: heracross
shuckle:
  name: Shuckle
  type: monster
  cost: 2
  attack: 100
  health: 400
  flavour: It stores Berries inside its shell. To avoid attacks, it hides beneath
    rocks and remains completely still.
  description: ''
  id: 20
  rarity: C
  uuid: shuckle
breloom:
  name: Breloom
  type: monster
  cost: 3
  attack: 500
  health: 100
  flavour: It scatters poisonous spores and throws powerful punches while its foe
    is hampered by inhaled spores
  description: 'If this card is summoned: You can target an opponent''s monster; silence
    it and it cannot attack until the end of the next turn'
  id: 21
  rarity: C
  opt_if_summon_cost: |-
    retval = can_target_oppon_field() and prompt_user_activate()
    if retval:
      self.target = target_oppon_field()
  opt_if_summon: |-
    self.target.apply_status(self, 'SILENCE', 1, 'END')
    self.target.apply_status(self, "CANNOT_ATTACK", 1, "END")
  uuid: breloom
chansey:
  name: Chansey
  type: monster
  cost: 3
  attack: 100
  health: 600
  description: 'In the standby phase of each turn: Heal adjacent friendly characters 200 health.'
  begin_phase_standby: |-
    adjs = get_adjacent()
    for adj in adjs:
      adj.heal(self, 200)
  id: 22
  rarity: C
  uuid: chansey
tyranitar:
  name: Tyranitar
  type: monster
  cost: 7
  attack: 700
  health: 700
  description: 'In the end phase of each turn: Deal 100 to everything except “Tyranitar”
    cards.'
  begin_phase_end: |-
    for card in owner.board:
      if card is not None and "tyranitar" not in card.name.lower():
        card.take_damage(self, 100)
    for card in oppon.board:
      if card is not None and "tyranitar" not in card.name.lower():
        card.take_damage(self, 100)
    owner.take_damage(self, 100)
    oppon.take_damage(self, 100)
  id: 23
  rarity: R
  uuid: tyranitar
gengar:
  name: Gengar
  type: monster
  cost: 4
  attack: 700
  health: 200
  description: When this card would be destroyed by battle, you can target an opponent
    monster, silence it.
  id: 24
  rarity: C
  opt_if_destroyed_battle: |-
    card = target_oppon_field()
    card.apply_status(self, "SILENCE", -1)
  uuid: gengar
dragonite:
  name: Dragonite
  type: monster
  cost: 7
  attack: 700
  health: 700
  description: 'When this card is at full health and is about to take battle damage: Half the damage
    taken.'
  attackee_damage_calc: |-
    if self.health == self.original_health:
      retval = args[1] // 2
    else:
      retval = args[1]
  defendee_damage_calc: |-
    if self.health == self.original_health:
      retval = args[1] // 2
    else:
      retval = args[1]
  id: 25
  rarity: SR
  uuid: dragonite
gyarados:
  name: Gyarados
  type: monster
  cost: 5
  attack: 700
  health: 500
  description: This card can only be summoned by destroying a “Magikarp” you control.
    When this card is summoned, reduce the attack of each of your opponent’s monsters
    by 100.
  id: 26
  rarity: SR
  uuid: gyarados
salamence:
  name: Salamence
  type: monster
  cost: 7
  attack: 700
  health: 700
  description: When this card destroys another by battle, increase this card’s attack
    by 300.
  id: 27
  rarity: R
  if_destroy_battle: self.gain(self, 300)
  uuid: salamence
lugia:
  name: Lugia
  type: monster
  cost: 7
  attack: 400
  health: 1200
  description: 'Once per turn: When this card is about to take battle damage: Half the damage
    taken.'
  attackee_damage_calc: |-
    if not self.has_status("LUGIA_ACTIVATED_EFFECT"):
      retval = args[1] // 2
      card.apply_status(self, "LUGIA_ACTIVATED_EFFECT", 0, "END")
    else:
      retval = args[1]
  defendee_damage_calc: |-
    if not self.has_status("LUGIA_ACTIVATED_EFFECT"):
      retval = args[1] // 2
      card.apply_status(self, "LUGIA_ACTIVATED_EFFECT", 0, "END")
    else:
      retval = args[1]
  id: 28
  rarity: SR
  uuid: lugia
lapras:
  name: Lapras
  type: monster
  cost: 3
  attack: 100
  health: 200
  description: When this card is summoned, place a “Perish” counter on all face-up
    monsters on the field. During the end phase of the next turn, destroy all monsters
    with a Perish counter.
  id: 29
  rarity: R
  if_summon: |-
    for card in field:
      if card is not None:
        card.apply_status(self, "PERISH", 1, "END")
  uuid: lapras
turtwig:
  name: Turtwig
  type: monster
  cost: 1
  attack: 100
  health: 200
  flavour: Made from soil, the shell on its back hardens when it drinks water. It
    lives along lakes.
  description: 'At the end of each turn: Gain 100 health.'
  begin_phase_end: self.gain(self, 0, 100)
  id: 30
  rarity: C
  uuid: turtwig
pokemonsafari:
  name: Pokemon Safari
  type: field spell
  cost: 2
  description: 'At the beginning of each turn: Add a random 3 mana or lower Pokemon
    to your hand.'
  id: 31
  rarity: C
  uuid: pokemonsafari
lavendertown:
  name: Lavender Town
  type: field spell
  cost: 2
  description: 'Once per turn: When a pokemon dies, summon a 100/100 ghost.'
  id: 32
  rarity: R
  uuid: lavendertown
switchout:
  name: Switch Out!
  type: spell
  cost: 2
  description: (Quick) Return one of your Pokemon on the field to your hand. Summon a Pokemon
    from your deck with equal or lesser cost.
  can_activate_hand: |-
    retval = can_select_owner_field(
      lambda card: card.type == "monster" and card.id in archetypes.pokemon and
                   can_select_owner_deck(lambda x: x.cost <= card.cost and x.type == "monster" and x.id in archetypes.pokemon)
    )
  on_activate_hand_cost: |-
    self.target = select_owner_field(
      lambda card: card.type == "monster" and card.id in archetypes.pokemon and
                   can_select_owner_deck(lambda x: x.cost <= card.cost and x.type == "monster" and x.id in archetypes.pokemon)
    )
    io.bounce(self.target)
  on_activate_hand: |-
    to_summon = select_owner_deck(lambda card: card.cost <= self.target.cost and card.type == "monster" and card.id in archetypes.pokemon)
    idx = select_owner_board()
    io.summon(to_summon, idx)
  id: 33
  rarity: C
  uuid: switchout
ultraball:
  name: Ultraball
  type: spell
  cost: 4
  description: Target a monster on the field with 7 or less attack; banish it.
  can_activate_hand: |-
    retval = can_target_field(lambda card: card.attack <= 7)
  on_activate_hand_cost: |-
    self.target = target_field(lambda card: card.attack <= 7)
  on_activate_hand: |-
    io.banish(self.target)
  id: 34
  rarity: R
  uuid: ultraball
repel:
  name: Repel
  type: spell
  cost: 3
  description: Return an enemy monster to the opponent’s hand
  can_activate_hand: |-
    retval = can_select_oppon_field()
  on_activate_hand: |-
    target = select_oppon_field()
    io.bounce(target)
  id: 35
  rarity: R
  uuid: repel
squirtbottle:
  name: Squirt Bottle
  type: spell
  cost: 2
  description: Target a monster on the field; silence it until the end of this turn
  id: 36
  rarity: C
  can_activate_hand: retval = can_target_field()
  on_activate_hand_cost: self.target = target_field()
  on_activate_hand: self.target.apply_status(self, "SILENCE", 0, "END")
  uuid: squirtbottle
technicalmachine:
  name: Technical Machine
  type: spell
  cost: 1
  description: Select a monster on the field; it gains +200/+200
  id: 37
  rarity: R
  can_activate_hand: retval = can_select_field()
  on_activate_hand_cost: self.target = select_field()
  on_activate_hand: |-
    self.target.gain(self, 200, 200)
  uuid: technicalmachine
pokemontrade:
  name: Pokemon Trade
  type: spell
  cost: 2
  description: Send as many Pokemon as you’d like from your field to the graveyard.
    Summon, from your extra deck, a Pokemon with cost equal to their total cost.
  id: 38
  rarity: SR
  uuid: pokemontrade
pokemonshuffle:
  name: Pokemon Shuffle
  type: spell
  cost: 2
  description: Shuffle as many Pokemon as you’d like from the graveyard into your
    deck. Summon, from your extra deck, a Pokemon with cost equal to the number of unique names sent.
  can_activate_hand: |-
    self.num_gy = len(owner.graveyard.filter(lambda card: card.id in archetypes.pokemon and card.type == "monster"))
    ed_targets = owner.extradeck.filter(lambda card: card.id in archetypes.pokemon and card.type == "monster" and card.cost <= self.num_gy)
    has_target = len(ed_targets) > 0

    has_space = can_select_owner_board()
    retval = has_target and has_space
  on_activate_hand_cost: |-
    sends = select_owner_graveyard(lambda card: card.id in archetypes.pokemon and card.type == "monster", amount=-1)
    names = {card.name for card in sends}
    self.pkmn_shuffle_num_names = len(names)
    for card in sends:
      io.spin(card)
  on_activate_hand: |-
    ed_target = select_owner_extradeck(
      lambda card:
        card.id in archetypes.pokemon
        and card.type == "monster"
        and card.cost == self.pkmn_shuffle_num_names
    )
    idx = select_owner_board()
    io.summon(ed_target, idx)
  id: 39
  rarity: UR
  uuid: pokemonshuffle
sprightjet:
  name: Spright Jet
  type: monster
  cost: 2
  attack: 200
  health: 100
  description: 'If this card is summoned: you can add 1 spell card from your deck
    to your hand that costs exactly 2 mana.'
  opt_if_summon_cost: |-
    retval = can_select_owner_deck(lambda x: "spell" in x.type and x.cost == 2) and prompt_user_activate()
  opt_if_summon: |-
    card = select_owner_deck(lambda x: "spell" in x.type and x.cost == 2)
    io.add_to_hand(card)
  id: 40
  rarity: SR
  uuid: sprightjet
sprightblue:
  name: Spright Blue
  type: monster
  cost: 2
  attack: 100
  health: 200
  description: 'If this card is summoned: you can add 1 monster card from your deck
    to your hand that costs exactly 2 mana.'
  opt_if_summon_cost: |-
    retval = can_select_owner_deck(lambda x: "monster" in x.type and x.cost == 2) and prompt_user_activate()
  opt_if_summon: |-
    card = select_owner_deck(lambda x: "monster" in x.type and x.cost == 2)
    io.add_to_hand(card)
  id: 41
  rarity: UR
  uuid: sprightblue
sprightpixie:
  name: Spright Pixie
  type: monster
  cost: 2
  attack: 200
  health: 200
  description: You can tribute this card; Adjacent 2-cost monsters gain 200/200.
  on_activate_cost: |-
    for i, c in enumerate(owner.board):
      if c == self:
        break
    self.idx = i
    io.send_graveyard(self)
  on_activate: |-
    i = self.idx
    if i > 0 and owner.board[i - 1] and owner.board[i - 1].cost == 2:
      owner.board[i - 1].gain(self, 200, 200)
    if i < len(owner.board) - 1 and owner.board[i + 1] and owner.board[i + 1].cost == 2:
      owner.board[i + 1].gain(self, 200, 200)
  id: 42
  rarity: R
  uuid: sprightpixie
sprightstarter:
  name: Spright Starter
  type: spell
  cost: 2
  description: Summon a 2 cost monster from your deck. Take damage equal to 2x its
    attack.
  can_activate_hand: |-
    retval = can_select_owner_deck(lambda card: card.cost == 2 and card.type == "monster") and can_select_owner_board()
  on_activate_hand: |-
    if can_select_owner_deck(lambda card: card.cost == 2 and card.type == "monster") and can_select_owner_board():
      card = select_owner_deck(lambda card: card.cost == 2 and card.type == "monster")
      idx = select_owner_board()
      io.summon(card, idx)
  id: 43
  rarity: R
  uuid: sprightstarter
windupkitten:
  name: Wind Up Kitten
  type: monster
  cost: 2
  attack: 0
  health: 100
  description: 'Once while on the field: you can pay 1 mana; return a monster from
    the field to the hand'
  can_activate: retval = not self.has_status("WINDUPKITTEN_ACTIVATED_EFFECT") and can_select_field() and owner.can_pay(1)
  on_activate_cost: owner.pay(1)
  on_activate: |-
    if not self.has_status("WINDUPKITTEN_ACTIVATED_EFFECT"):
      card = select_field()
      io.bounce(card)
      self.apply_status(self, "WINDUPKITTEN_ACTIVATED_EFFECT", -1)
  id: 44
  rarity: UR
  uuid: windupkitten
livetwinlilla:
  name: Live Twin Lil-la
  type: monster
  cost: 2
  attack: 0
  health: 100
  description: When this card is summoned, and you control “Ki-sikil”,
    you can target a card on your opponent's field; destroy it. If you don't,
    you can add a “Ki-sikil” from your deck to your hand.
  opt_if_summon_cost: |-
    found = False
    for card in owner.field:
      if "ki-sikil" in card.name.lower():
        found = True
    self.kisikil_exists = found
    if found:
      retval = can_target_oppon_field() and prompt_user_activate()
      if retval:
        self.target = target_oppon_field()
    else:
      retval = can_select_owner_deck(lambda card: "kisikil" in card.id) and prompt_user_activate()
  opt_if_summon: |-
    if self.kisikil_exists:
      io.destroy(self.target)
    else:
      card = select_owner_deck(lambda card: "kisikil" in card.id)
      io.add_to_hand(card)
  id: 45
  rarity: R
  uuid: livetwinlilla
livetwinkisikil:
  name: Live Twin Ki-sikil
  type: monster
  cost: 2
  attack: 0
  health: 100
  description: When this card is summoned, and you control “Lil-la”, draw
    a card. If you don't, you can add a “Lil-la” from your deck to your hand.
  opt_if_summon_cost: |-
    found = False
    for card in owner.field:
      if "lil-la" in card.name.lower():
        found = True
    self.lilla_exists = found
    if found:
      retval = prompt_user_activate()
    else:
      retval = can_select_owner_deck(lambda card: "lilla" in card.id) and prompt_user_activate()
  opt_if_summon: |-
    if self.lilla_exists:
      io.draw(owner)
    else:
      card = select_owner_deck(lambda card: "lilla" in card.id)
      io.add_to_hand(card)
  id: 46
  rarity: R
  uuid: livetwinkisikil
livetwintroublesunny:
  name: Live Twin Trouble Sunny
  type: monster
  cost: 4
  attack: 400
  health: 400
  description: You can tribute this card; summon up to one “Live Twin
    Lil-la” and up to one “Live Twin Ki-sikil” from your graveyard simultaneously.
  on_activate_cost: |-
    for i, c in enumerate(owner.board):
      if c == self:
        break
    self.idx = i
    io.send_graveyard(self)
  on_activate: |-
    if can_select_owner_board() and can_select_owner_graveyard(lambda x: "live twin lil-la" in x.name.lower()):
      lilla = select_owner_graveyard(lambda x: "live twin lil-la" in x.name.lower())
      idx = select_owner_board()

      io.move_to(lilla, "field", idx)
    else:
      lilla = None

    if can_select_owner_board() and can_select_owner_graveyard(lambda x: "live twin ki-sikil" in x.name.lower()):
      kisikil = select_owner_graveyard(lambda x: "live twin ki-sikil" in x.name.lower())
      idx = select_owner_board()

      io.move_to(kisikil, "field", idx)
    else:
      kisikil = None

    for card in [lilla, kisikil]:
      if card is None:
        continue
      card.effect("if_summon_cost")
      card.effect("if_summon")
      act = card.effect("opt_if_summon_cost")
      if act:
        card.effect("opt_if_summon")
  id: 47
  rarity: UR
  uuid: livetwintroublesunny
livetwinsmoonlitsnitch:
  name: Live Twin’s Moonlit Snitch
  type: field spell
  cost: 2
  description: 'When this card is activated: You can add 1 "Live Twin" monster from
    your Deck to your hand. While you control a "Live Twin" monster, each time your
    opponent Normal Summons, you gain 100 LP, and if you do, inflict 100 damage to
    your opponent.'
  id: 48
  rarity: SR
  uuid: livetwinsmoonlitsnitch
omen:
  name: Omen
  type: monster
  cost: 4
  attack: 400
  health: 400
  description: 'When this card is summoned: You can target a monster; give it stealth.'
  id: 49
  rarity: R
  opt_if_summon_cost: |-
    retval = can_target_oppon_field() and prompt_user_activate()
    if retval:
      self.target = target_oppon_field()
  opt_if_summon:
    self.target.apply_status(self, "STEALTH", -1)
  uuid: omen
brimstone:
  name: Brimstone
  type: monster
  cost: 4
  attack: 200
  health: 200
  description: 'While this card is on the field: Adjacent monsters gain 200 ATK. Not working!! (no cont. effects yet)'
  id: 50
  rarity: C
  uuid: brimstone
viper:
  name: Viper
  type: monster
  cost: -1
  attack: -1
  health: -1
  description: 'While this card is on the field: Opponent monsters in the 3 spaces
    in front of this monster lose 200 health (min. 1). Not working!! (no cont. effects yet)'
  id: 51
  rarity: R
  uuid: viper
reyna:
  name: Reyna
  type: monster
  cost: 6
  attack: 400
  health: 600
  description: 'When this card destroys another minion: heal 200 HP'
  id: 52
  rarity: R
  if_destroy_battle: self.heal(self, 200)
  uuid: reyna
cypher:
  name: Cypher
  type: monster
  cost: 4
  attack: 200
  health: 400
  description: The opposing monster and adjacent monsters to this card can’t attack. Not working!! (no cont. effects)
  id: 53
  rarity: R
  uuid: cypher
killjoy:
  name: Killjoy
  type: monster
  cost: 2
  attack: 200
  health: 200
  description: Add a 1-cost "Kiljoy Turret" to hand
  id: 54
  rarity: SR
  uuid: killjoy
neon:
  name: Neon
  type: monster
  cost: 2
  attack: 100
  health: 200
  description: 'If an attack is directed at this monster: Flip a coin, if heads, the
    attack is negated. Not working!! (no attack negation)'
  id: 55
  rarity: C
  uuid: neon
jett:
  name: Jett
  type: monster
  cost: 5
  attack: 500
  health: 400
  description: 'Once per summon: if this card is about to take lethal battle damage,
    it survives with 1 health.'
  attackee_damage_calc: |-
    dmg = args[1]
    if self.has_status("JETT_ACTIVATED_EFFECT") or dmg < self.health:
      retval = dmg
    else:
      self.apply_status(self, "JETT_ACTIVATED_EFFECT", -1)
      retval = self.health - 1
  defendee_damage_calc: |-
    dmg = args[1]
    if self.has_status("JETT_ACTIVATED_EFFECT") or dmg < self.health:
      retval = dmg
    else:
      self.apply_status(self, "JETT_ACTIVATED_EFFECT", -1)
      retval = self.health - 1
  id: 56
  rarity: UR
  uuid: jett
phoenix:
  name: Phoenix
  type: monster
  cost: 4
  attack: 600
  health: 200
  description: When this attacks, the opposing monster has 0 attack.
  id: 57
  rarity: R
  defendee_damage_calc: |-
    retval = 0
  uuid: phoenix
1tap:
  name: 1-Tap
  type: spell
  cost: 3
  description: 'Target a monster: deal 500 damage'
  id: 58
  rarity: SR
  can_activate_hand: retval = can_target_field()
  on_activate_hand_cost: self.target = target_field()
  on_activate_hand: self.target.take_damage(self, 500)
  uuid: 1tap
shortyangle:
  name: Shorty Angle
  type: spell
  cost: 2
  description: 'Target a friendly monster: deal 500 damage to the opposing monster.'
  id: 59
  rarity: R
  uuid: shortyangle
cloudburst:
  name: Cloud Burst
  type: spell
  cost: 1
  description: 'Target a monster: give it stealth. Add another “Cloud burst” to your
    hand.'
  id: 60
  rarity: UR
  uuid: cloudburst
odinspam:
  name: Odin Spam
  type: spell
  cost: 5
  description: Deal damage to all opponent monsters equal to 150 x the number of monsters
    they control.
  on_activate_hand: |-
    damage = len(oppon.field) * 150
    for target in oppon.field:
      target.take_damage(self, 500)
  id: 61
  rarity: R
  uuid: odinspam
haven:
  name: Haven
  type: field spell
  cost: 2
  description: 'Once per turn: If an “agent” monster is about to attack, you can
    (Quick) activate this effect, it takes no recoil.'
  id: 62
  rarity: C
  uuid: haven
bind:
  name: Bind
  type: field spell
  cost: 2
  description: 'Once per turn (Quick): swap an “agent” monster to a new space'
  id: 63
  rarity: SR
  uuid: bind
dartmonkey:
  name: Dart Monkey
  type: monster
  cost: 1
  attack: 100
  health: 100
  description: When this card is summoned, you can target a monster on the field;
    deal 100 damage to it. Then add a temporary Dart Monkey to your hand.
  opt_if_summon_cost: |-
    retval = can_target_field() and prompt_user_activate()
    if retval:
      self.target = target_field()
  opt_if_summon: |-
    self.target.take_damage(self, 100)
    dart_monkey = self.template.create_instance(owner, oppon, io)
    io.add_to_hand(dart_monkey)
    dart_monkey.apply_status(self, "BANISH", 0, "END")
  id: 64
  rarity: C
  uuid: dartmonkey
supermonkey:
  name: Super Monkey
  type: monster
  cost: 6
  attack: 600
  health: 600
  description: 'At the beginning of your turn: this card turns into "Sun Avatar." Not working!!'
  id: 65
  rarity: SR
  uuid: supermonkey
supermonkeyfanclub:
  name: Super Monkey Fan Club
  type: spell
  cost: 3
  description: Convert all Dart Monkeys on your side of the field to Super Monkeys. At
    the end of this turn, convert them back.
  id: 66
  rarity: R
  uuid: supermonkeyfanclub
johnnywyles:
  name: Johnny Wyles
  type: monster
  cost: -1
  attack: -1
  health: -1
  description: ''
  id: 67
  rarity: C
  uuid: johnnywyles
riverwyles:
  name: River Wyles
  type: monster
  cost: -1
  attack: -1
  health: -1
  description: ''
  id: 68
  rarity: C
  uuid: riverwyles
emergencybutton:
  name: Emergency Button
  type: spell
  cost: -1
  description: ''
  id: 69
  rarity: C
  uuid: emergencybutton
redamogus:
  name: Red Amogus
  type: monster
  cost: -1
  attack: -1
  health: -1
  description: ''
  id: 70
  rarity: C
  uuid: redamogus
leagueplaceholder1:
  name: League Placeholder 1
  type: ''
  cost: -1
  description: ''
  id: 71
  rarity: C
  uuid: leagueplaceholder1
leagueplaceholder2:
  name: League Placeholder 2
  type: ''
  cost: -1
  description: ''
  id: 72
  rarity: R
  uuid: leagueplaceholder2
leagueplaceholder3:
  name: League Placeholder 3
  type: ''
  cost: -1
  description: ''
  id: 73
  rarity: SR
  uuid: leagueplaceholder3
leagueplaceholder4:
  name: League Placeholder 4
  type: ''
  cost: -1
  description: ''
  id: 74
  rarity: C
  uuid: leagueplaceholder4
leagueplaceholder5:
  name: League Placeholder 5
  type: ''
  cost: -1
  description: ''
  id: 75
  rarity: SR
  uuid: leagueplaceholder5
leagueplaceholder6:
  name: League Placeholder 6
  type: ''
  cost: -1
  description: ''
  id: 76
  rarity: UR
  uuid: leagueplaceholder6
leagueplaceholder7:
  name: League Placeholder 7
  type: ''
  cost: -1
  description: ''
  id: 77
  rarity: UR
  uuid: leagueplaceholder7
zoe:
  name: Zoe
  type: ''
  cost: -1
  description: ''
  id: 78
  rarity: UR
  uuid: zoe
ancientruins:
  name: Ancient Ruins
  type: spell
  cost: 2
  description: Summon as many Unown as you can to your side of the field.
  on_activate_hand: |-
    unown_tmpl = io.card_templates["unown"]
    for i in range(len(owner.board)):
      if owner.board[i] == None:
        card = unown_tmpl.create_instance(owner, oppon, io)
        io.summon(card, i)
  id: 79
  rarity: R
  uuid: ancientruins
lopunny:
  name: Lopunny
  type: monster
  cost: 2
  attack: 300
  health: 100
  flavour: The ears appear to be delicate. If they are touched roughly, it kicks with
    its graceful legs.
  description: When this card is summoned, you can target one monster on the field;
    deal 100 damage to it.
  id: 80
  rarity: C
  opt_if_summon_cost: |-
    retval = can_target_oppon_field() and prompt_user_activate()
    if retval:
      self.target = target_oppon_field()
  opt_if_summon: self.target.take_damage(self, 100)
  uuid: lopunny
megalopunny:
  name: Mega Lopunny
  type: monster
  cost: 3
  attack: 400
  health: 200
  description: When this card is summoned, you can target one monster on the field;
    deal 100 damage to it, and if you do, it is silenced and cannot attack until the
    end of the next turn. Must first be summoned by “Mega Bracelet”, and you cannot
    summon any “Mega” for the rest of this duel, except Mega Lopunny.
  id: 81
  rarity: UR
  can_summon: |-
    retval = self.has_status("PROPERLY_SUMMONED")
  if_summon: |-
    self.apply_status(self, "PROPERLY_SUMMONED", -1)
  opt_if_summon_cost: |-
    retval = can_target_oppon_field() and prompt_user_activate()
    if retval:
      self.target = target_oppon_field()
  opt_if_summon: self.target.take_damage(self, 100);self.target.apply_status(self, 'SILENCE',
    1, 'END')
  uuid: megalopunny
beedrill:
  name: Beedrill
  type: monster
  cost: 2
  attack: 100
  health: 100
  flavour: 'Flies at high speed and attacks using its large venomous stingers on its
    forelegs and tail. '
  description: When this card attacks, all your “Beedrill” cards everywhere
    gain 50 original attack.
  if_attack: |-
    for card in all_cards.filter(lambda card: "beedrill" in card.id):
      card.original_gain(self, 50, 0)
  if_attack_directly: |-
    for card in all_cards.filter(lambda card: "beedrill" in card.id):
      card.original_gain(self, 50, 0)
  id: 82
  rarity: C
  uuid: beedrill
megabeedrill:
  name: Mega Beedrill
  type: monster
  cost: 2
  attack: 300
  health: 100
  description: When this card attacks, all of your “Beedrill” cards everywhere
    gain 100 attack. (Quick) You can return this card to your hand; Add a “Beedrill”
    from your graveyard to your hand. You cannot summon any “Mega” for the rest
    of this duel, except Mega Beedrill.
  if_attack: |-
    for card in all_cards.filter(lambda card: "beedrill" in card.id):
      card.original_gain(self, 100, 0)
  if_attack_directly: |-
    for card in all_cards.filter(lambda card: "beedrill" in card.id):
      card.original_gain(self, 100, 0)
  can_activate: |-
    retval = can_select_owner_graveyard(lambda card: "beedrill" in card.id)
  on_activate_cost: io.bounce(self)
  on_activate: |-
    io.bounce(select_owner_graveyard(lambda card: "beedrill" in card.id))
  id: 83
  rarity: SR
  uuid: megabeedrill
charizard:
  name: Charizard
  type: monster
  cost: 3
  attack: 400
  health: 300
  flavour: Charizard flies around the sky in search of powerful opponents. It breathes
    fire of such great heat that it melts anything. However, it never turns its fiery
    breath on any opponent weaker than itself.
  description: ''
  id: 84
  rarity: C
  uuid: charizard
megacharizardx:
  name: Mega Charizard X
  type: monster
  cost: 5
  attack: 600
  health: 500
  description: 'In the standby phase of each turn: This card gains 300 attack. You
    cannot summon any “Mega” for the rest of this duel, except “Mega Charizard”.'
  begin_phase_standby: |-
    self.gain(self, 300)
  id: 85
  rarity: UR
  uuid: megacharizardx
megacharizardy:
  name: Mega Charizard Y
  type: monster
  cost: 5
  attack: 600
  health: 300
  description: This card can attack directly. You cannot summon
    any “Mega” for the rest of this duel, except “Mega Charizard”.
  can_attack_directly: retval = not self.has_status("CANNOT_ATTACK")
  id: 86
  rarity: UR
  uuid: megacharizardy
megaheracross:
  name: Mega Heracross
  type: monster
  cost: 8
  attack: 800
  health: 800
  description: This card cannot attack. In the end phase deal 100 damage 8 times
    randomly to opponent monsters. You cannot summon any “Mega” for the rest of this
    duel, except “Mega Heracross”.
  begin_phase_end: |-
    for _ in range(8):
      if len(oppon.field):
        tgt = random.choice(oppon.field)
        tgt.take_damage(100)
        io.check_field(source=self)
  id: 87
  rarity: SR
  can_attack: retval = False
  uuid: megaheracross
megasnorlax:
  name: Mega Snorlax
  type: monster
  cost: 10
  attack: 500
  health: 1500
  description: Opponent minions must attack this monster first. Spells do half damage
    to this monster. You cannot summon any “Mega” for the rest of this duel, except
    “Mega Snorlax”.
  id: 88
  rarity: SR
  uuid: megasnorlax
scizor:
  name: Scizor
  type: monster
  cost: 3
  attack: 300
  health: 300
  description: ''
  id: 89
  rarity: C
  uuid: scizor
megascizor:
  name: Mega Scizor
  type: monster
  cost: 5
  attack: 400
  health: 400
  description: When this card is summoned, do 250 damage to the lowest health enemy
    monster. If it dies, do this again. You cannot summon any “Mega” for the rest
    of this duel, except “Mega Scizor”.
  id: 90
  rarity: SR
  uuid: megascizor
kangaskhan:
  name: Kangaskhan
  type: monster
  cost: 3
  attack: 300
  health: 400
  description: ''
  id: 91
  rarity: C
  uuid: kangaskhan
megakangaskhan:
  name: Mega Kangaskhan
  type: monster
  cost: 7
  attack: 800
  health: 600
  description: This card can attack twice. The second attack does half damage. You
    cannot summon any “Mega” for the rest of this duel, except “Mega Kangaskhan”.
  id: 92
  rarity: R
  uuid: megakangaskhan
sableye:
  name: Sableye
  type: monster
  cost: 1
  attack: 0
  health: 200
  description: 'If this card is summoned, target an enemy monster: Reduce its attack
    by half.'
  id: 93
  rarity: C
  uuid: sableye
megasableye:
  name: Mega Sableye
  type: monster
  cost: 5
  attack: 0
  health: 1000
  description: Your monsters are unaffected by opponent’s card effects. You cannot
    summon any “Mega” for the rest of this duel, except “Mega Sableye”.
  id: 94
  rarity: R
  uuid: megasableye
ditto:
  name: Ditto
  type: monster
  cost: 3
  attack: 100
  health: 100
  description: When Ditto is summoned, target one monster on the field. This card
    becomes that card, except for the HP stat.
  id: 95
  rarity: SR
  uuid: ditto
eevee:
  name: Eevee
  type: monster
  cost: 3
  attack: 200
  health: 200
  description: 'If this card is summoned, choose one: Gain 200 attack,
    Gain 200 health, Gain stealth'
  if_summon: |-
    choice = owner.io.prompt_user_select_text([
      "Gain 200 attack",
      "Gain 200 health",
      "Gain stealth",
    ])
    match choice:
      case 0: 
        self.gain(self, 200, 0)
      case 1: 
        self.gain(self, 0, 200)
      case 2: 
        self.apply_status(self, "STEALTH", -1)
  id: 96
  rarity: SR
  uuid: eevee
megabracelet:
  name: Mega Bracelet
  type: spell
  cost: 0
  description: Send a Pokemon to the graveyard from your hand, field, or deck; Summon
    a Mega Pokemon from your extra deck that mentions it and pay its mana cost
  can_activate_hand: |-
    ed_targets = owner.extradeck.filter(
      lambda card:
        "Mega" in card.name and card.id in archetypes.pokemon and owner.can_pay(card.cost)
    )
    self.ed_names = [card.name for card in ed_targets]
    has_target = can_select(
      lambda card:
        (card in owner.hand or card in owner.field or card in owner.deck) 
        and any(card.name in ed_name for ed_name in self.ed_names)
    )
    has_space = can_select_owner_board()
    retval = has_target and has_space
  on_activate_hand_cost: |-
    ed_targets = owner.extradeck.filter(
      lambda card: "Mega" in card.name and card.id in archetypes.pokemon and owner.can_pay(card.cost)
    )
    self.ed_names = [card.name for card in ed_targets]
    self.target = select(
      lambda card:
        (card in owner.hand or card in owner.field or card in owner.deck) 
        and any(card.name in ed_name for ed_name in self.ed_names)
    )
    io.send_graveyard(self.target)
  on_activate_hand: |-
    ed_target = select_owner_extradeck(
      lambda card:
        "Mega" in card.name
        and self.target.name in card.name
        and card.id in archetypes.pokemon
        and owner.can_pay(card.cost)
    )
    idx = select_owner_board()
    owner.pay(ed_target.cost)
    io.summon(ed_target, idx)
  id: 97
  rarity: C
  uuid: megabracelet
megamewtwox:
  name: Mega Mewtwo X
  type: monster
  cost: 10
  attack: 600
  health: 1000
  description: When this card is summoned, deal 600 damage to yourself, then you can
    deal 1000 damage to your opponent. If this card is destroyed, draw 3 cards.
  id: 98
  rarity: SR
  uuid: megamewtwox
megamewtwoy:
  name: Mega Mewtwo Y
  type: monster
  cost: 10
  attack: 1000
  health: 600
  description: When this card is summoned, deal 1000 damage to yourself, then you
    can take control of up to two enemy monsters until the end of the turn. If this
    card is destroyed, draw 3 cards.
  id: 99
  rarity: SR
  uuid: megamewtwoy
mewtwo:
  name: Mewtwo
  type: monster
  cost: 7
  attack: 600
  health: 600
  description: When this card is summoned, deal 600 damage to yourself. If this card
    is destroyed, you can add one “Mewtwo” card from your deck to your hand. Reduce
    its mana cost by 2.
  id: 100
  rarity: UR
  uuid: mewtwo
pokemonghost:
  name: Pokemon Ghost
  type: monster
  cost: 0
  attack: 100
  health: 100
  flavour: Many years ago, this was a beloved Pokemon. It wanders the Earth searching
    for its former master.
  description: ''
  id: -1
  rarity: "--"
  uuid: pokemonghost
rainyday:
  name: Rainy Day
  type: field spell
  cost: 2
  description: It is raining. The attack of fire type monsters are reduced by 100.
  id: -1
  rarity: "--"
  uuid: rainyday
harshsunlight:
  name: Harsh Sunlight
  type: field spell
  cost: 2
  description: The sunlight is harsh. The attacks of water type monsters is reduced
    by 100.
  id: -1
  rarity: "--"
  uuid: harshsunlight
kiljoyturret:
  name: Kiljoy Turret
  type: monster
  cost: 1
  attack: 100
  health: 100
  description: 'Once per turn: deal 100 damage to the opposing monster and the monsters
    adjacent to it.'
  id: -1
  rarity: "--"
  uuid: kiljoyturret
sunavatar:
  name: Sun Avatar
  type: monster
  cost: 6
  attack: 600
  health: 1000
  description: 'At the beginning of your turn: this card turns into True Sun God.'
  id: -1
  rarity: "--"
  uuid: sunavatar
truesungod:
  name: True Sun God
  type: monster
  cost: 10
  attack: 600
  health: 1000
  flavour: There can be only one.
  description: When this card is summoned, send all monsters from either side of the
    field to the graveyard. This card’s original attack and health increases by their total
    attack and health.
  id: -1
  rarity: "--"
  uuid: truesungod
mewthefirstpokemon:
  name: "`Mew`. the First Pokemon"
  type: monster
  cost: 2
  attack: 200
  health: 200
  flavour: So rare that it is still said to be a mirage by many experts. Only a few
    people have seen it worldwide.
  description: Once per turn, you can pay 1 mana, this card’s effect becomes another
    face-up monster’s effect for rest this turn.
  id: 101
  rarity: XR
  uuid: mewthefirstpokemon
lakeofragegyarados:
  name: Lake of Rage `Gyarados`
  type: monster
  cost: 4
  attack: 700
  health: 500
  flavour: This Gyarados was forced to evolve by Team Rocket. The Magikarp it evolves
    from retains its red color, having no time to change its scale color to blue.
  description: This card can only be summoned by tributing a “Magikarp” you control.
    When this card is summoned, reduce the attack of each of your opponent’s monsters
    by 100.
  id: 102
  rarity: XR
  can_summon: |-
    for card in owner.board:
      if "magikarp" in card.name.lower():
        retval = True
      else:
        retval = False
  on_summon: TODO
  uuid: lakeofragegyarados
arceusthecreator:
  name: "`Arceus`, the Creator"
  type: monster
  cost: 10
  attack: 1200
  health: 1200
  flavour: It is the heavenly fount from which pours the light that shines across
    the world. Its luminance guides and protects all Pokémon. Hisuian mythology states
    that Arceus is the creator of all things.
  description: 'Once while face-up on the field: Send all other cards on the field
    to the graveyard.'
  id: 103
  rarity: XR
  uuid: arceusthecreator
mewtwostrikesback:
  name: "`Mewtwo` Strikes Back"
  type: monster
  cost: 7
  attack: 600
  health: 600
  flavour: 'The circumstances of one''s birth are irrelevant: it is what one does
    with life that determines one''s destiny'
  description: When this card is summoned, deal 600 damage to yourself. If this card
    is destroyed, you can add one “Mewtwo” card from your deck to your hand. Reduce
    its mana cost by 2.
  id: 104
  rarity: XR
  uuid: mewtwostrikesback
placeholderxr1:
  name: Placeholder XR 1
  type: ''
  cost: -1
  description: ''
  id: 105
  rarity: XR
  uuid: placeholderxr1
placeholderxr2:
  name: Placeholder XR 2
  type: ''
  cost: -1
  description: ''
  id: 106
  rarity: XR
  uuid: placeholderxr2
placeholderxr3:
  name: Placeholder XR 3
  type: ''
  cost: -1
  description: ''
  id: 107
  rarity: XR
  uuid: placeholderxr3
placeholderxr4:
  name: Placeholder XR 4
  type: ''
  cost: -1
  description: ''
  id: 108
  rarity: XR
  uuid: placeholderxr4
placeholderxr5:
  name: Placeholder XR 5
  type: ''
  cost: -1
  description: ''
  id: 109
  rarity: XR
  uuid: placeholderxr5
placeholderxr6:
  name: Placeholder XR 6
  type: ''
  cost: -1
  description: ''
  id: 110
  rarity: XR
  uuid: placeholderxr6

