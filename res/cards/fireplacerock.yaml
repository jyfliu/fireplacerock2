---
mew:
  name: Mew
  type: monster
  cost: 2
  attack: 200
  health: 200
  flavour: Apparently, it appears only to those people who are pure of heart and have
    a strong desire to see it.
  description: Once per turn, you can pay 1 mana, this card’s activated effect becomes
    another face-up monster’s activated effect for rest this turn (you pay its cost).
  id: fireplacerock:0
  rarity: UR
  can_activate: |-
    if self.has_status("MEW_ACTIVATED_EFFECT"):
      if hasattr(self.mimic, "can_activate"):
        retval = self.interp(self.mimic.can_activate)
      else:
        retval = False
    else:
      retval = can_select_field(lambda x: x != self) and owner.can_pay(1)
  on_activate_cost: |-
    if self.has_status("MEW_ACTIVATED_EFFECT"):
      if hasattr(self.mimic, "on_activate_cost"):
        self.interp(self.mimic.on_activate_cost)
    else:
      owner.pay(1)
      self.target = select_field(lambda x: x != self)
  on_activate: |-
    if self.has_status("MEW_ACTIVATED_EFFECT"):
      if hasattr(self.mimic, "on_activate"):
        self.interp(self.mimic.on_activate)
    else:
      self.mimic = self.target.template
      print(self.target)
      self.apply_status(self, "MEW_ACTIVATED_EFFECT", 0, "END")
  uuid: mew
unown:
  name: Unown
  type: monster
  cost: 1
  attack: 0
  health: 100
  flavour: Unown is just like Man; it dies to Pokemon with move. But for those who
    are unprepared for Man's—or rather, Unown's, for they are one and the same—unpredictability,
    they too will fall.
  description: When this card is summoned, its name changes randomly.
  id: fireplacerock:1
  rarity: R
  if_summon: |-
    c = random.randrange(28)
    if c == 26: self.change_name("Unown !")
    elif c == 27: self.change_name("Unown ?")
    else: self.change_name("Unown " + chr(c+ord("A")))
  uuid: unown
sprightelf:
  name: Spright Elf
  type: monster
  cost: 2
  attack: 200
  health: 200
  description: |-
    Tribute: 1 2-cost monster + 1 other monster. You can pay 2 mana; summon a
    2 cost monster from your graveyard to an adjacent space.
    While this card is on your field, adjacent monsters on your field cannot be
    targeted.
  id: fireplacerock:2
  rarity: UR
  can_summon_extradeck: |-
    retval = can_link(
      lambda card: card.cost == 2,
      lambda card: True,
    )
  summon_extradeck: |-
    link(
      lambda card: card.cost == 2,
      lambda card: True,
    )
  can_summon: retval = False
  can_activate: |-
    retval = (
      owner.can_pay(2)
      and owner.graveyard.contains(lambda card: card.cost == 2 and card.can("summon"))
      and can_select_owner_board(get_adjacent_board_idxs())
    )
  on_activate_cost: |-
    owner.pay(2)
  on_activate: |-
    card = select_owner_graveyard(lambda card: card.type == "monster" and card.cost == 2 and card.can("summon"))
    idx = select_owner_board(get_adjacent_board_idxs())
    io.summon(card, idx)
  on_owner_summon: |-
    if args[0] in get_adjacent():
      args[0].apply_status(self, "UNTARGETABLE", -1)
  on_owner_remove: |-
    if args[0] in get_adjacent():
      args[0].clear_status("UNTARGETABLE", self)
  if_summon: |-
    for card in get_adjacent():
      card.apply_status(self, "UNTARGETABLE", -1)
  on_remove: |-
    for card in get_adjacent():
      card.clear_status("UNTARGETABLE", self)
  uuid: sprightelf
magikarp:
  name: Magikarp
  type: monster
  cost: 0
  attack: 0
  health: 200
  flavour: Magikarp is a pathetic excuse for a Pokémon that is only capable of flopping
    and splashing. This behavior prompted scientists to undertake research into it.
  description: ''
  id: fireplacerock:3
  rarity: C
  uuid: magikarp
mudkip:
  name: Mudkip
  type: monster
  cost: 1
  attack: 100
  health: 200
  flavour: To alert it, the fin on its head senses the flow of water. It has the strength
    to lift boulders.
  description: ''
  id: fireplacerock:4
  rarity: C
  uuid: mudkip
pikachu:
  name: Pikachu
  type: monster
  cost: 1
  attack: 200
  health: 100
  flavour: It lives in forests with others. It stores electricity in the pouches on
    its cheeks.
  description: ''
  id: fireplacerock:5
  rarity: R
  uuid: pikachu
grovyle:
  name: Grovyle
  type: monster
  cost: 2
  attack: 300
  health: 200
  flavour: It lives in dense jungles. While closing in on its prey, it leaps from
    branch to branch.
  description: ''
  id: fireplacerock:6
  rarity: C
  uuid: grovyle
ampharos:
  name: Ampharos
  type: monster
  cost: 3
  attack: 300
  health: 400
  flavour: The bright light on its tail can be seen far away. It has been treasured
    since ancient times as a beacon.
  description: ''
  id: fireplacerock:7
  rarity: C
  uuid: ampharos
blastoise:
  name: Blastoise
  type: monster
  cost: 4
  attack: 400
  health: 500
  flavour: The rocket cannons on its shell fire jets of water capable of punching
    holes through thick steel.
  description: ''
  id: fireplacerock:8
  rarity: C
  uuid: blastoise
wailord:
  name: Wailord
  type: monster
  cost: 4
  attack: 200
  health: 600
  flavour: It can sometimes knock out opponents with the shock created by breaching
    and crashing its big body onto the water.
  description: ''
  id: fireplacerock:9
  rarity: R
  uuid: wailord
snorlax:
  name: Snorlax
  type: monster
  cost: 5
  attack: 400
  health: 700
  flavour: Very lazy. Just eats and sleeps. As its rotund bulk builds, it becomes
    steadily more slothful.
  description: ''
  id: fireplacerock:10
  rarity: C
  uuid: snorlax
garchomp:
  name: Garchomp
  type: monster
  cost: 6
  attack: 600
  health: 700
  flavour: It flies at speeds equal to a jet fighter plane. It never allows its prey
    to escape.
  description: ''
  id: fireplacerock:11
  rarity: C
  uuid: garchomp
jirachi:
  name: Jirachi
  type: monster
  cost: 6
  attack: 400
  health: 800
  flavour: 'Once Jeffrey got iron head-flinched 5 times in a row: “skill diff”'
  description: 'When this card is about to attack a monster: Flip two coins. If both
    are heads then the monster can no longer attack.'
  id: fireplacerock:12
  rarity: R
  if_attack: |-
    c1 = flip_coin()
    c2 = flip_coin()
    if c1 and c2:
      args[0].apply_status(self, "CANNOT_ATTACK", -1)
  uuid: jirachi
hooh:
  name: Ho-oh
  type: monster
  cost: 7
  attack: 700
  health: 700
  flavour: It will reveal itself before a pure-hearted trainer by shining its bright
    rainbow-colored wings.
  description: 'When this card is about to attack a monster: Half the other monster''s
    attack'
  id: fireplacerock:13
  rarity: SR
  if_attack: args[0].set(source=self, attack=args[0].attack // 2)
  uuid: hooh
kyogre:
  name: Kyogre
  type: monster
  cost: 8
  attack: 800
  health: 1000
  flavour: It is said to have widened the seas by causing downpours. It had been asleep
    in a marine trench.
  description: 'When this card is summoned: Change all face-up field spells to Rainy
    Day.'
  if_summon: |-
    to_gy = []
    owner_idxs = []
    oppon_idxs = []
    template = io.card_templates["rainyday"]
    for i, card in enumerate(owner.traps):
      if card is not None and card.type == "field spell":
        to_gy.append(card)
        owner_idxs.append(i)
    for i, card in enumerate(oppon.traps):
      if card is not None and card.type == "field spell":
        to_gy.append(card)
        oppon_idxs.append(i)
    io.send_graveyard_multiple(to_gy)
    
    for idx in owner_idxs:
      new_card = template.create_instance(owner, oppon, io)
      new_card.cost = 0
      io.activate_spell(new_card, idx)
    for idx in oppon_idxs:
      new_card = template.create_instance(oppon, owner, io)
      new_card.cost = 0
      io.activate_spell(new_card, idx)
  id: fireplacerock:14
  rarity: R
  uuid: kyogre
groudon:
  name: Groudon
  type: monster
  cost: 8
  attack: 800
  health: 1000
  flavour: It had been asleep in underground magma ever since it fiercely fought Kyogre
    long ago.
  description: 'When this card is summoned: Change all face-up field spells to Harsh
    Sunlight.'
  if_summon: |-
    to_gy = []
    owner_idxs = []
    oppon_idxs = []
    template = io.card_templates["harshsunlight"]
    for i, card in enumerate(owner.traps):
      if card is not None and card.type == "field spell":
        to_gy.append(card)
        owner_idxs.append(i)
    for i, card in enumerate(oppon.traps):
      if card is not None and card.type == "field spell":
        to_gy.append(card)
        oppon_idxs.append(i)
    io.send_graveyard_multiple(to_gy)
    
    for idx in owner_idxs:
      new_card = template.create_instance(owner, oppon, io)
      new_card.cost = 0
      io.activate_spell(new_card, idx)
    for idx in oppon_idxs:
      new_card = template.create_instance(oppon, owner, io)
      new_card.cost = 0
      io.activate_spell(new_card, idx)
  id: fireplacerock:15
  rarity: R
  uuid: groudon
giratina:
  name: Giratina
  type: monster
  cost: 9
  attack: 800
  health: 1200
  flavour: It was banished for its violence. It silently gazed upon the old world
    from the Distortion World.
  description: When a card is destroyed as a result of battle with this card,
    banish it instead.
  if_destroy_battle: |-
    io.banish(args[0])
  id: fireplacerock:16
  rarity: R
  uuid: giratina
arceus:
  name: Arceus
  type: monster
  cost: 10
  attack: 1200
  health: 1200
  flavour: It emerged from an egg in a place where there was nothing, then shaped
    the world.
  description: |-
    Tribute: 1 Pokemon that costs 5 or more mana.
    <br/>
    This card cannot be targeted by spells.
    <br/>
    Once while face-up on the field: You can send all other cards on the
    field to the graveyard.
  id: fireplacerock:17
  rarity: UR
  can_summon_extradeck: |-
    retval = can_link(
      lambda card: card.cost >= 5
    )
  summon_extradeck: |-
    link(
      lambda card: card.cost >= 5
    )
  can_summon: retval = False
  can_activate: retval = not self.has_status("ARCEUS_ACTIVATED_EFFECT")
  on_activate: |-
    if not self.has_status("ARCEUS_ACTIVATED_EFFECT"):
      to_gy = []
      for card in owner.board + owner.traps:
        if card != self and card is not None:
          to_gy.append(card)
      for card in oppon.board + oppon.traps:
        if card is not None:
          to_gy.append(card)
      io.send_graveyard_multiple(to_gy)
      self.apply_status(self, "ARCEUS_ACTIVATED_EFFECT", -1)
  if_summon: |-
    self.apply_status(self, "SPELL_UNTARGETABLE", -1)
  uuid: arceus
gallade:
  name: Gallade
  type: monster
  cost: 2
  attack: 200
  health: 300
  flavour: A master of courtesy and swordsmanship, it fights using the extending swords
    on its elbows.
  description: 'On attack declaration, flip a coin: if heads, this attack will deal
    2x the attack of this monster.'
  if_attack: self.double_dmg = flip_coin()
  if_attack_directly: self.double_dmg = flip_coin()
  attacker_damage_calc: |-
    if self.double_dmg:
      retval = self.attack * 2
    else:
      retval = self.attack
  attacker_direct_damage_calc: |-
    if self.double_dmg:
      retval = self.attack * 2
    else:
      retval = self.attack
  id: fireplacerock:18
  rarity: C
  uuid: gallade
heracross:
  name: Heracross
  type: monster
  cost: 3
  attack: 500
  health: 400
  flavour: It loves sweet honey. To keep all the honey to itself, it hurls rivals
    away with its prized horn.
  description: 'On attack declaration, flip a coin: if tails, this attack misses and
    deals no damage (this card still takes recoil).'
  if_attack: self.no_dmg = not flip_coin()
  if_attack_directly: self.no_dmg = not flip_coin()
  attacker_damage_calc: |-
    if self.no_dmg:
      retval = 0
    else:
      retval = self.attack
  attacker_direct_damage_calc: |-
    if self.no_dmg:
      retval = 0
    else:
      retval = self.attack
  id: fireplacerock:19
  rarity: C
  uuid: heracross
shuckle:
  name: Shuckle
  type: monster
  cost: 2
  attack: 100
  health: 400
  flavour: It stores Berries inside its shell. To avoid attacks, it hides beneath
    rocks and remains completely still.
  description: ''
  id: fireplacerock:20
  rarity: C
  uuid: shuckle
breloom:
  name: Breloom
  type: monster
  cost: 3
  attack: 500
  health: 100
  flavour: It scatters poisonous spores and throws powerful punches while its foe
    is hampered by inhaled spores
  description: 'If this card is summoned: You can target an opponent''s monster; silence
    it and it cannot attack until the end of the next turn'
  id: fireplacerock:21
  rarity: C
  opt_if_summon_cost: |-
    retval = can_target_oppon_field() and prompt_user_activate()
    if retval:
      self.target = target_oppon_field()
  opt_if_summon: |-
    self.target.apply_status(self, 'SILENCE', 1, 'END')
    self.target.apply_status(self, "CANNOT_ATTACK", 1, "END")
  uuid: breloom
chansey:
  name: Chansey
  type: monster
  cost: 3
  attack: 100
  health: 600
  description: 'In the standby phase of each turn: Heal adjacent friendly characters 200 health.'
  begin_phase_standby: |-
    adjs = get_adjacent()
    for adj in adjs:
      adj.heal(self, 200)
  id: fireplacerock:22
  rarity: C
  uuid: chansey
tyranitar:
  name: Tyranitar
  type: monster
  cost: 7
  attack: 700
  health: 700
  description: 'In the end phase of each turn: Deal 100 to everything except “Tyranitar”
    cards.'
  begin_phase_end: |-
    for card in owner.board:
      if card is not None and "tyranitar" not in card.name.lower():
        card.take_damage(self, 100)
    for card in oppon.board:
      if card is not None and "tyranitar" not in card.name.lower():
        card.take_damage(self, 100)
    owner.take_damage(self, 100)
    oppon.take_damage(self, 100)
  id: fireplacerock:23
  rarity: R
  uuid: tyranitar
gengar:
  name: Gengar
  type: monster
  cost: 4
  attack: 700
  health: 200
  description: When this card would be destroyed by battle, you can target an opponent
    monster, silence it.
  id: fireplacerock:24
  rarity: C
  opt_if_destroyed_battle: |-
    card = target_oppon_field()
    card.apply_status(self, "SILENCE", -1)
  uuid: gengar
dragonite:
  name: Dragonite
  type: monster
  cost: 7
  attack: 700
  health: 700
  description: 'When this card is at full health and is about to take battle damage: Half the damage
    taken.'
  attackee_damage_calc: |-
    if self.health == self.original_health:
      retval = args[1] // 2
    else:
      retval = args[1]
  defendee_damage_calc: |-
    if self.health == self.original_health:
      retval = args[1] // 2
    else:
      retval = args[1]
  id: fireplacerock:25
  rarity: SR
  uuid: dragonite
gyarados:
  name: Gyarados
  type: monster
  cost: 5
  attack: 700
  health: 500
  description: This card can only be summoned by destroying a “Magikarp” you control.
    When this card is summoned, reduce the attack of each of your opponent’s monsters
    by 200.
  can_summon: |-
    for card in owner.field:
      if "magikarp" in card.name.lower():
        retval = True
      else:
        retval = False
  if_summon: |-
    target = select_owner_field(lambda card: "magikarp" in card.name.lower())
    io.destroy(target)
  id: fireplacerock:26
  rarity: SR
  uuid: gyarados
salamence:
  name: Salamence
  type: monster
  cost: 7
  attack: 700
  health: 700
  description: When this card destroys another by battle, increase this card’s attack
    by 300.
  id: fireplacerock:27
  rarity: R
  if_destroy_battle: self.gain(self, 300)
  uuid: salamence
lugia:
  name: Lugia
  type: monster
  cost: 7
  attack: 300
  health: 1200
  description: 'Opponent minions must attack this one first (not working). Once per turn: When this card is about to take battle damage: Half the damage
    taken.'
  attackee_damage_calc: |-
    if not self.has_status("LUGIA_ACTIVATED_EFFECT"):
      retval = args[1] // 2
      card.apply_status(self, "LUGIA_ACTIVATED_EFFECT", 0, "END")
    else:
      retval = args[1]
  defendee_damage_calc: |-
    if not self.has_status("LUGIA_ACTIVATED_EFFECT"):
      retval = args[1] // 2
      card.apply_status(self, "LUGIA_ACTIVATED_EFFECT", 0, "END")
    else:
      retval = args[1]
  id: fireplacerock:28
  rarity: SR
  uuid: lugia
lapras:
  name: Lapras
  type: monster
  cost: 3
  attack: 100
  health: 200
  description: When this card is summoned, place a “Perish” counter on all face-up
    monsters on the field. During the end phase of the next turn, destroy all monsters
    with a Perish counter.
  id: fireplacerock:29
  rarity: R
  if_summon: |-
    for card in field:
      if card is not None:
        card.apply_status(self, "PERISH", 1, "END")
  uuid: lapras
turtwig:
  name: Turtwig
  type: monster
  cost: 1
  attack: 100
  health: 200
  flavour: Made from soil, the shell on its back hardens when it drinks water. It
    lives along lakes.
  description: 'At the end of each turn: Gain 100 health.'
  begin_phase_end: self.gain(self, 0, 100)
  id: fireplacerock:30
  rarity: C
  uuid: turtwig
pokemonsafari:
  name: Pokemon Safari
  type: field spell
  cost: 2
  description: 'At the beginning of each turn: Add a random 4 mana or lower Pokemon
    to your hand.'
  begin_phase_standby: |-
    if io.turn_p == owner:
      all_pokemon = [io.card_templates[p] for p in archetypes.pokemon]
      all_pokemon = [t for t in all_pokemon if t.cost <= 4]
      all_pokemon = [t for t in all_pokemon if "twin" not in t.id]
      template = random.choice(all_pokemon)
      pokemon = template.create_instance(owner, oppon, io)
      io.add_to_hand(pokemon)
  can_activate_hand: |-
    retval = True
  id: fireplacerock:31
  rarity: C
  uuid: pokemonsafari
lavendertown:
  name: Lavender Town
  type: field spell
  cost: 2
  description: 'Once per turn: When a pokemon dies, summon a 100/100 ghost in its place.'
  can_activate_hand: |-
    retval = True
  on_owner_remove: |-
    if args[0].id in archetypes.pokemon and not self.has_status("LAVENDER_TOWN_ACTIVATED_EFFECT"):
      if hasattr(self, "candidates"): 
        self.candidates.append((args[0].uuid, owner.board.index_of(args[0])))
      else:
        self.candidates = [(args[0].uuid, owner.board.index_of(args[0]))]
  on_owner_destroyed: |-
    if hasattr(self, "candidates") and not self.has_status("LAVENDER_TOWN_ACTIVATED_EFFECT"):
      for target_uuid, target_idx in self.candidates:
        if target_uuid == args[0].uuid:
          template = io.card_templates["pokemonghost"]
          ghost = template.create_instance(owner, oppon, io)
          io.summon(ghost, target_idx)
          self.apply_status(self, "LAVENDER_TOWN_ACTIVATED_EFFECT", 0, "END")
          break
    self.candidates = []
  on_oppon_remove: |-
    if args[0].id in archetypes.pokemon and not self.has_status("LAVENDER_TOWN_ACTIVATED_EFFECT"):
      if hasattr(self, "candidates"): 
        self.candidates.append((args[0].uuid, oppon.board.index_of(args[0])))
      else:
        self.candidates = [(args[0].uuid, oppon.board.index_of(args[0]))]
  on_oppon_destroyed: |-
    if hasattr(self, "candidates") and not self.has_status("LAVENDER_TOWN_ACTIVATED_EFFECT"):
      for target_uuid, target_idx in self.candidates:
        if target_uuid == args[0].uuid:
          template = io.card_templates["pokemonghost"]
          ghost = template.create_instance(oppon, owner, io)
          io.summon(ghost, target_idx)
          self.apply_status(self, "LAVENDER_TOWN_ACTIVATED_EFFECT", 0, "END")
          break
    self.candidates = []
  id: fireplacerock:32
  rarity: R
  uuid: lavendertown
switchout:
  name: Switch Out!
  type: spell
  cost: 0
  description: Return one of your Pokemon on the field to your hand. Summon a Pokemon
    from your deck with equal or lesser cost.
  can_activate_hand: |-
    retval = can_select_owner_field(
      lambda card: card.type == "monster" and card.id in archetypes.pokemon and
                   can_select_owner_deck(lambda x: x.cost <= card.cost and x.type == "monster" and x.id in archetypes.pokemon)
    )
  on_activate_hand_cost: |-
    self.target = select_owner_field(
      lambda card: card.type == "monster" and card.id in archetypes.pokemon and
                   can_select_owner_deck(lambda x: x.cost <= card.cost and x.type == "monster" and x.id in archetypes.pokemon)
    )
    io.bounce(self.target)
  on_activate_hand: |-
    to_summon = select_owner_deck(lambda card: card.cost <= self.target.cost and card.type == "monster" and card.id in archetypes.pokemon)
    idx = select_owner_board()
    io.summon(to_summon, idx)
  id: fireplacerock:33
  rarity: C
  uuid: switchout
ultraball:
  name: Ultraball
  type: spell
  cost: 4
  description: Target a monster on the field with 7 or less attack; banish it.
  can_activate_hand: |-
    retval = can_target_field(lambda card: card.attack <= 7)
  on_activate_hand_cost: |-
    self.target = target_field(lambda card: card.attack <= 7)
  on_activate_hand: |-
    io.banish(self.target)
  id: fireplacerock:34
  rarity: R
  uuid: ultraball
repel:
  name: Repel
  type: spell
  cost: 3
  description: Return an enemy monster to the opponent’s hand
  can_activate_hand: |-
    retval = can_select_oppon_field()
  on_activate_hand: |-
    target = select_oppon_field()
    io.bounce(target)
  id: fireplacerock:35
  rarity: R
  uuid: repel
squirtbottle:
  name: Squirt Bottle
  type: spell
  cost: 2
  description: Target a monster on the field; silence it until the end of this turn
  id: fireplacerock:36
  rarity: C
  can_activate_hand: retval = can_target_field()
  on_activate_hand_cost: self.target = target_field()
  on_activate_hand: self.target.apply_status(self, "SILENCE", 0, "END")
  uuid: squirtbottle
technicalmachine:
  name: Technical Machine
  type: spell
  cost: 1
  description: Select a monster on the field; it gains +200/+200
  id: fireplacerock:37
  rarity: R
  can_activate_hand: retval = can_select_field()
  on_activate_hand_cost: self.target = select_field()
  on_activate_hand: |-
    self.target.gain(self, 200, 200)
  uuid: technicalmachine
pokemontrade:
  name: Pokemon Trade
  type: spell
  cost: 2
  description: Send as many Pokemon as you’d like from your field to the graveyard.
    Summon, from your extra deck, a Pokemon with cost equal to their total cost.
  id: fireplacerock:38
  rarity: SR
  uuid: pokemontrade
pokemonshuffle:
  name: Pokemon Shuffle
  type: spell
  cost: 2
  description: Shuffle as many Pokemon as you’d like from the graveyard into your
    deck. Summon, from your extra deck, a Pokemon with cost equal to the number of unique names sent.
  can_activate_hand: |-
    self.num_gy = len(owner.graveyard.filter(lambda card: card.id in archetypes.pokemon and card.type == "monster"))
    ed_targets = owner.extradeck.filter(lambda card: card.id in archetypes.pokemon and card.type == "monster" and card.cost <= self.num_gy)
    has_target = len(ed_targets) > 0

    has_space = can_select_owner_board()
    retval = has_target and has_space
  on_activate_hand_cost: |-
    costs = owner.extradeck.filter(lambda card: card.id in archetypes.pokemon and card.type == "monster" and card.cost <= self.num_gy).map(lambda x: x.cost)
    costs = list(set(costs))
    sends = select_owner_graveyard(lambda card: card.id in archetypes.pokemon and card.type == "monster", amount=costs)
    names = {card.name for card in sends}
    self.pkmn_shuffle_num_names = len(names)
    for card in sends:
      io.spin(card)
  on_activate_hand: |-
    ed_target = select_owner_extradeck(
      lambda card:
        card.id in archetypes.pokemon
        and card.type == "monster"
        and card.cost == self.pkmn_shuffle_num_names
    )
    idx = select_owner_board()
    io.summon(ed_target, idx)
  id: fireplacerock:39
  rarity: UR
  uuid: pokemonshuffle
sprightjet:
  name: Spright Jet
  type: monster
  cost: 2
  attack: 200
  health: 100
  description: 'If this card is summoned: you can add 1 spell card from your deck
    to your hand that costs exactly 2 mana.'
  opt_if_summon_cost: |-
    retval = can_select_owner_deck(lambda x: "spell" in x.type and x.cost == 2) and prompt_user_activate()
  opt_if_summon: |-
    card = select_owner_deck(lambda x: "spell" in x.type and x.cost == 2)
    io.add_to_hand(card)
  id: fireplacerock:40
  rarity: SR
  uuid: sprightjet
sprightblue:
  name: Spright Blue
  type: monster
  cost: 2
  attack: 100
  health: 200
  description: 'If this card is summoned: you can add 1 monster card from your deck
    to your hand that costs exactly 2 mana.'
  opt_if_summon_cost: |-
    retval = can_select_owner_deck(lambda x: "monster" in x.type and x.cost == 2) and prompt_user_activate()
  opt_if_summon: |-
    card = select_owner_deck(lambda x: "monster" in x.type and x.cost == 2)
    io.add_to_hand(card)
  id: fireplacerock:41
  rarity: UR
  uuid: sprightblue
sprightpixie:
  name: Spright Pixie
  type: monster
  cost: 2
  attack: 200
  health: 200
  description: You can tribute this card; Adjacent 2-cost monsters gain 200/200.
  on_activate_cost: |-
    for i, c in enumerate(owner.board):
      if c == self:
        break
    self.idx = i
    io.send_graveyard(self)
  on_activate: |-
    i = self.idx
    if i > 0 and owner.board[i - 1] and owner.board[i - 1].cost == 2:
      owner.board[i - 1].gain(self, 200, 200)
    if i < len(owner.board) - 1 and owner.board[i + 1] and owner.board[i + 1].cost == 2:
      owner.board[i + 1].gain(self, 200, 200)
  id: fireplacerock:42
  rarity: R
  uuid: sprightpixie
sprightstarter:
  name: Spright Starter
  type: spell
  cost: 2
  description: Summon a 2 cost monster from your deck. Take damage equal to 2x its
    attack.
  can_activate_hand: |-
    retval = can_select_owner_deck(lambda card: card.cost == 2 and card.type == "monster") and can_select_owner_board()
  on_activate_hand: |-
    if can_select_owner_deck(lambda card: card.cost == 2 and card.type == "monster") and can_select_owner_board():
      card = select_owner_deck(lambda card: card.cost == 2 and card.type == "monster")
      idx = select_owner_board()
      io.summon(card, idx)
  id: fireplacerock:43
  rarity: R
  uuid: sprightstarter
windupkitten:
  name: Wind Up Kitten
  type: monster
  cost: 2
  attack: 0
  health: 100
  description: 'Once while on the field: you can pay 1 mana; return a monster from
    the field to the hand'
  can_activate: retval = not self.has_status("WINDUPKITTEN_ACTIVATED_EFFECT") and can_select_field() and owner.can_pay(1)
  on_activate_cost: owner.pay(1)
  on_activate: |-
    if not self.has_status("WINDUPKITTEN_ACTIVATED_EFFECT"):
      card = select_field()
      io.bounce(card)
      self.apply_status(self, "WINDUPKITTEN_ACTIVATED_EFFECT", -1)
  id: fireplacerock:44
  rarity: UR
  uuid: windupkitten
twinlatios:
  name: Baby Latios Twin
  type: monster
  cost: 2
  attack: 0
  health: 100
  description: When this card is summoned, and you control “Latias Twin”,
    you can target a card on your opponent's field; destroy it. If you don't,
    you can add a “Latias Twin” from your deck to your hand.
  opt_if_summon_cost: |-
    found = False
    for card in owner.field:
      if "twinlatias" in card.id:
        found = True
    self.latias_exists = found
    if found:
      retval = can_target_oppon_field() and prompt_user_activate()
      if retval:
        self.target = target_oppon_field()
    else:
      retval = can_select_owner_deck(lambda card: "twinlatias" in card.id) and prompt_user_activate()
  opt_if_summon: |-
    if self.latias_exists:
      io.destroy(self.target)
    else:
      card = select_owner_deck(lambda card: "twinlatias" in card.id)
      io.add_to_hand(card)
  id: fireplacerock:45
  rarity: R
  uuid: twinlatios
twinlatias:
  name: Baby Latias Twin
  type: monster
  cost: 2
  attack: 0
  health: 100
  description: When this card is summoned, and you control “Latios Twin”, draw
    a card. If you don't, you can add a “Latios Twin” from your deck to your hand.
  opt_if_summon_cost: |-
    found = False
    for card in owner.field:
      if "twinlatios" in card.id:
        found = True
    self.latios_exists = found
    if found:
      retval = prompt_user_activate()
    else:
      retval = can_select_owner_deck(lambda card: "twinlatios" in card.id) and prompt_user_activate()
  opt_if_summon: |-
    if self.latios_exists:
      io.draw(owner)
    else:
      card = select_owner_deck(lambda card: "twinlatios" in card.id)
      io.add_to_hand(card)
  id: fireplacerock:46
  rarity: R
  uuid: twinlatias
twinslatioslatias:
  name: Twins Latios and Latias
  type: monster
  cost: 4
  attack: 400
  health: 400
  description: You can tribute this card; summon up to one “Latias Twin” and up
    to one “Latios Twin” from your graveyard simultaneously.
  on_activate_cost: |-
    for i, c in enumerate(owner.board):
      if c == self:
        break
    self.idx = i
    io.send_graveyard(self)
  on_activate: |-
    if can_select_owner_board() and can_select_owner_graveyard(lambda x: "twinlatios" in x.id):
      latios = select_owner_graveyard(lambda x: "twinlatios" in x.id)
      idx = select_owner_board()

      io.move_to(latios, "field", idx)
    else:
      latios = None

    if can_select_owner_board() and can_select_owner_graveyard(lambda x: "twinlatias" in x.id):
      latias = select_owner_graveyard(lambda x: "twinlatias" in x.id)
      idx = select_owner_board()

      io.move_to(latias, "field", idx)
    else:
      latias = None

    for card in [latios, latias]:
      if card is None:
        continue
      card.effect("if_summon_cost")
      card.effect("if_summon")
      act = card.effect("opt_if_summon_cost")
      if act:
        card.effect("opt_if_summon")
  id: fireplacerock:47
  rarity: UR
  uuid: twinslatioslatias
livetwinsmoonlitsnitch:
  name: Live Twin’s Moonlit Snitch
  type: field spell
  cost: 2
  description: 'When this card is activated: You can add 1 "Live Twin" monster from
    your Deck to your hand. While you control a "Live Twin" monster, each time your
    opponent summons a monster, you gain 100 LP, and inflict 100 damage to
    your opponent.'
  id: fireplacerock:48
  rarity: SR
  uuid: livetwinsmoonlitsnitch
omen:
  name: Omen
  type: monster
  cost: 4
  attack: 400
  health: 400
  description: 'When this card is summoned: You can target a monster; give it stealth.'
  id: fireplacerock:49
  rarity: R
  opt_if_summon_cost: |-
    retval = can_target_owner_field() and prompt_user_activate()
    if retval:
      self.target = target_owner_field()
  opt_if_summon:
    self.target.apply_status(self, "STEALTH", -1)
  uuid: omen
brimstone:
  name: Brimstone
  type: monster
  cost: 4
  attack: 200
  health: 200
  description: 'While this card is on the field: Adjacent monsters gain 200 ATK.'
  on_owner_summon: |-
    if args[0] in get_adjacent():
      args[0].gain(self, 200)
  on_owner_remove: |-
    if args[0] in get_adjacent():
      args[0].lose(self, 200)
  if_summon: |-
    for card in get_adjacent():
      card.gain(self, 200)
  on_remove: |-
    for card in get_adjacent():
      card.lose(self, 200)
  id: fireplacerock:50
  rarity: C
  uuid: brimstone
viper:
  name: Viper
  type: monster
  cost: 4
  attack: 300
  health: 300
  description: 'While this card is on the field: Opponent monsters in the 3 spaces
    in front of this monster lose 200 health (min. 1).'
  on_oppon_summon: |-
    if args[0] in get_opposing() + get_opposing_adjacent():
      args[0].lose(self, 0, 200)
  on_oppon_remove: |-
    if args[0] in get_opposing() + get_opposing_adjacent():
      args[0].gain(self, 0, 200)
  if_summon: |-
    for card in get_opposing() + get_opposing_adjacent():
      card.lose(self, 0, 200)
  on_remove: |-
    for card in get_opposing() + get_opposing_adjacent():
      card.gain(self, 0, 200)
  id: fireplacerock:51
  rarity: R
  uuid: viper
reyna:
  name: Reyna
  type: monster
  cost: 6
  attack: 400
  health: 600
  description: 'When this card destroys another minion: heal 400 HP'
  id: fireplacerock:52
  rarity: R
  if_destroy_battle: self.heal(self, 400)
  uuid: reyna
cypher:
  name: Cypher
  type: monster
  cost: 4
  attack: 200
  health: 400
  description: The diagonally adjacent enemy monsters to this card cannot attack.
  on_oppon_summon: |-
    if args[0] in get_opposing_adjacent():
      args[0].apply_status(self, "CANNOT_ATTACK", -1)
  on_oppon_remove: |-
    if args[0] in get_opposing_adjacent():
      args[0].clear_status("CANNOT_ATTACK", self)
  if_summon: |-
    for card in get_opposing_adjacent():
      card.apply_status(self, "CANNOT_ATTACK", -1)
  on_remove: |-
    for card in get_opposing_adjacent():
      card.clear_status("CANNOT_ATTACK", self)
  id: fireplacerock:53
  rarity: R
  uuid: cypher
kiljoy:
  name: Kiljoy
  type: monster
  cost: 2
  attack: 200
  health: 200
  description: When this card is summoned; Add a 1-cost "Kiljoy Turret" to hand
  if_summon: |-
    template = io.card_templates["kiljoyturret"]
    turret = template.create_instance(owner, oppon, io)
    io.add_to_hand(turret)
  id: fireplacerock:54
  rarity: SR
  uuid: kiljoy
neon:
  name: Neon
  type: monster
  cost: 2
  attack: 100
  health: 200
  description: 'If an attack is directed at this monster: Flip a coin, if heads, the
    attack is negated. Not working!! (no attack negation)'
  id: fireplacerock:55
  rarity: C
  uuid: neon
jett:
  name: Jett
  type: monster
  cost: 5
  attack: 500
  health: 400
  description: 'Once per summon: if this card is about to take lethal battle damage,
    it survives with 1 health.'
  attackee_damage_calc: |-
    dmg = args[1]
    if self.has_status("JETT_ACTIVATED_EFFECT") or dmg < self.health:
      retval = dmg
    else:
      self.apply_status(self, "JETT_ACTIVATED_EFFECT", -1)
      retval = self.health - 1
  defendee_damage_calc: |-
    dmg = args[1]
    if self.has_status("JETT_ACTIVATED_EFFECT") or dmg < self.health:
      retval = dmg
    else:
      self.apply_status(self, "JETT_ACTIVATED_EFFECT", -1)
      retval = self.health - 1
  id: fireplacerock:56
  rarity: UR
  uuid: jett
phoenix:
  name: Phoenix
  type: monster
  cost: 4
  attack: 600
  health: 200
  description: When this attacks, the opposing monster has 0 attack.
  id: fireplacerock:57
  rarity: R
  defendee_damage_calc: |-
    retval = 0
  uuid: phoenix
1tap:
  name: 1-Tap
  type: spell
  cost: 3
  description: 'Target a monster: deal 500 damage'
  id: fireplacerock:58
  rarity: SR
  can_activate_hand: retval = can_target_field()
  on_activate_hand_cost: self.target = target_field()
  on_activate_hand: self.target.take_damage(self, 500)
  uuid: 1tap
shortyangle:
  name: Shorty Angle
  type: spell
  cost: 2
  description: 'Select a friendly monster: deal 500 damage to the opposing monster.'
  id: fireplacerock:59
  can_activate_hand: retval = can_select_owner_field()
  on_activate_hand_cost: self.target = select_owner_field()
  on_activate_hand: |-
    oppos = self.target.get_opposing()
    if oppos:
      oppos[0].take_damage(self, 500)
  rarity: R
  uuid: shortyangle
cloudburst:
  name: Cloud Burst
  type: spell
  cost: 1
  description: 'Give a friendly agent stealth. Add another “Cloud burst” to your
    hand.'
  id: fireplacerock:60
  rarity: UR
  uuid: cloudburst
odinspam:
  name: Odin Spam
  type: spell
  cost: 5
  description: Deal damage to all opponent monsters equal to 150 x the number of monsters
    they control.
  on_activate_hand: |-
    damage = len(oppon.field) * 150
    for target in oppon.field:
      target.take_damage(self, 500)
  id: fireplacerock:61
  rarity: R
  uuid: odinspam
haven:
  name: Haven
  type: field spell
  cost: 2
  description: 'Once per turn: If an “agent” monster is about to attack, it takes no recoil.'
  id: fireplacerock:62
  rarity: C
  uuid: haven
bind:
  name: Bind
  type: field spell
  cost: 2
  description: 'Draw a card. Once per turn: swap an “agent” monster to a new space.'
  id: fireplacerock:63
  rarity: SR
  uuid: bind
dartmonkey:
  name: Dart Monkey
  type: monster
  cost: 1
  attack: 100
  health: 100
  description: When this card is summoned, you can target a monster on the field;
    deal 100 damage to it. Then add a temporary Dart Monkey to your hand.
  opt_if_summon_cost: |-
    retval = can_target_field() and prompt_user_activate()
    if retval:
      self.target = target_field()
  opt_if_summon: |-
    self.target.take_damage(self, 100)
    dart_monkey = self.template.create_instance(owner, oppon, io)
    io.add_to_hand(dart_monkey)
    dart_monkey.apply_status(self, "BANISH", 0, "END")
  id: fireplacerock:64
  rarity: C
  uuid: dartmonkey
supermonkey:
  name: Super Monkey
  type: monster
  cost: 6
  attack: 200
  health: 700
  description: 'This card can attack 3 times each turn.'
  id: fireplacerock:65
  rarity: SR
  uuid: supermonkey
supermonkeyfanclub:
  name: Super Monkey Fan Club
  type: spell
  cost: 3
  description: Convert all Dart Monkeys on your side of the field to Super Monkeys. At
    the end of this turn, convert them back.
  id: fireplacerock:66
  rarity: R
  uuid: supermonkeyfanclub
rayquaza:
  name: Rayquaza
  type: monster
  cost: 8
  attack: 1100
  health: 900
  flavour: Rayquaza has lived for hundreds of millions of years in the ozone layer.
    When it flies at night, it resembles a shooting star.
  description: |-
    Tribute: 3 pokemon. Your pokemon cannot be targeted by effects while this
      card is on the field.
  id: fireplacerock:2
  rarity: SR
  can_summon_extradeck: |-
    retval = can_link(
      lambda card: card.id in archetypes.pokemon,
      lambda card: card.id in archetypes.pokemon,
      lambda card: card.id in archetypes.pokemon,
    )
  summon_extradeck: |-
    link(
      lambda card: card.id in archetypes.pokemon,
      lambda card: card.id in archetypes.pokemon,
      lambda card: card.id in archetypes.pokemon,
    )
  can_summon: retval = False
  id: fireplacerock:67
  rarity: UR
  uuid: rayquaza
darkrai:
  name: Darkrai
  type: monster
  cost: 4
  attack: 400
  health: 300
  flavour: On moonless nights, Darkrai afflicts those around it with horrific nightmares.
  description: |-
    Tribute: 1 Pokemon Ghost + 1 pokemon. You can pay 2 mana and target an enemy monster; put it to sleep until the end of your next turn (it cannot attack or use abilities, and the next damage it takes is doubled)'
  id: fireplacerock:68
  rarity: UR
  uuid: darkrai
pokemonduel:
  name: Duel
  type: field spell
  cost: 2
  description: |-
    For both players, each monster can only attack the monster directly in front of it (or directly if no opposing monster exists).
  id: fireplacerock:69
  rarity: R
  uuid: pokemonduel
redamogus:
  name: Red Amogus
  type: monster
  cost: 1
  attack: 0
  health: 100
  flavour: 'sus'
  description: 'When this card is summoned, you can change its name to anything you want. This card cannot be used as tribute material.'
  id: fireplacerock:70
  rarity: C
  uuid: redamogus
zoe:
  name: Zoe
  type: monster
  cost: 2
  attack: 0
  health: 200
  description: 'When Zoe is summoned, target an opposing monster; put it to sleep until the end of your next turn (it cannot attack or use abilities, and the next damage it takes is doubled)'
  id: fireplacerock:71
  rarity: C
  uuid: zoe
xerath:
  name: Xerath
  type: field spell
  cost: 5
  description: 'You can pay 2 mana and target an opposing monster; deal 600 damage to it. When all your monsters are destroyed, Xerath is destroyed.'
  id: fireplacerock:72
  rarity: R
  uuid: xerath
jinx:
  name: Jinx
  type: ''
  cost: 3
  attack: 200
  health: 200
  description: Each time Jinx destroys a monster; it takes no recoil, gains 300 attack and can attack one more time this turn.
  id: fireplacerock:73
  rarity: SR
  uuid: leagueplaceholder3
leagueplaceholder4:
  name: League Placeholder 4
  type: ''
  cost: -1
  description: ''
  id: fireplacerock:74
  rarity: C
  uuid: leagueplaceholder4
leagueplaceholder5:
  name: League Placeholder 5
  type: ''
  cost: -1
  description: ''
  id: fireplacerock:75
  rarity: SR
  uuid: leagueplaceholder5
leagueplaceholder6:
  name: League Placeholder 6
  type: ''
  cost: -1
  description: ''
  id: fireplacerock:76
  rarity: UR
  uuid: leagueplaceholder6
leagueplaceholder7:
  name: League Placeholder 7
  type: ''
  cost: -1
  description: ''
  id: fireplacerock:77
  rarity: UR
  uuid: leagueplaceholder7
leagueplaceholder8:
  name: League Placeholder 8
  type: ''
  cost: -1
  description: ''
  id: fireplacerock:78
  rarity: UR
  uuid: leagueplaceholder8
ancientruins:
  name: Ancient Ruins
  type: spell
  cost: 2
  description: Summon as many Unown as you can to your side of the field.
  on_activate_hand: |-
    unown_tmpl = io.card_templates["unown"]
    for i in range(len(owner.board)):
      if owner.board[i] == None:
        card = unown_tmpl.create_instance(owner, oppon, io)
        io.summon(card, i)
  id: fireplacerock:79
  rarity: R
  uuid: ancientruins
lopunny:
  name: Lopunny
  type: monster
  cost: 2
  attack: 300
  health: 100
  flavour: The ears appear to be delicate. If they are touched roughly, it kicks with
    its graceful legs.
  description: When this card is summoned, you can target one enemy monster on the field;
    deal 100 damage to it.
  id: fireplacerock:80
  rarity: C
  opt_if_summon_cost: |-
    retval = can_target_oppon_field() and prompt_user_activate()
    if retval:
      self.target = target_oppon_field()
  opt_if_summon: self.target.take_damage(self, 100)
  uuid: lopunny
megalopunny:
  name: Mega Lopunny
  type: monster
  cost: 3
  attack: 400
  health: 200
  flavour: Must first be summoned by the effect of Mega Bracelet.
  description: When this card is summoned, you can target one enemy monster on the field;
    deal 200 damage to it, and if you do, it is silenced and cannot attack until the
    end of the next turn. This card can attack on the turn it is summoned.
  id: fireplacerock:81
  rarity: UR
  opt_if_summon_cost: |-
    retval = can_target_oppon_field() and prompt_user_activate()
    if retval:
      self.target = target_oppon_field()
  opt_if_summon: |-
    self.target.take_damage(self, 200)
    self.target.apply_status(self, 'SILENCE', 1, 'END')
  if_summon: |-
    self.clear_status("CANNOT_ATTACK", source=god)
  uuid: megalopunny
beedrill:
  name: Beedrill
  type: monster
  cost: 2
  attack: 100
  health: 100
  flavour: 'Flies at high speed and attacks using its large venomous stingers on its
    forelegs and tail. '
  description: When this card attacks, all your “Beedrill” cards everywhere
    gain 50 original attack. This card can attack on the turn it is summoned.
  if_summon: |-
    self.clear_status("CANNOT_ATTACK", source=god)
  if_attack: |-
    for card in all_cards.filter(lambda card: "beedrill" in card.id):
      card.original_gain(self, 50, 0)
  if_attack_directly: |-
    for card in all_cards.filter(lambda card: "beedrill" in card.id):
      card.original_gain(self, 50, 0)
  id: fireplacerock:82
  rarity: C
  uuid: beedrill
megabeedrill:
  name: Mega Beedrill
  type: monster
  cost: 2
  attack: 100
  health: 100
  flavour: Must first be summoned by the effect of Mega Bracelet.
  description: When this card attacks, all of your “Beedrill” cards everywhere
    gain 75 attack. You can pay 1 mana; Add a “Beedrill”
    from your graveyard to your hand. This card can attack on the turn it is summoned.
  if_summon: |-
    self.clear_status("CANNOT_ATTACK", source=god)
  if_attack: |-
    for card in all_cards.filter(lambda card: "beedrill" in card.id):
      card.original_gain(self, 75, 0)
  if_attack_directly: |-
    for card in all_cards.filter(lambda card: "beedrill" in card.id):
      card.original_gain(self, 75, 0)
  can_activate: |-
    retval = can_select_owner_graveyard(lambda card: "beedrill" in card.id) and owner.can_pay(1)
  on_activate_cost: owner.pay(1)
  on_activate: |-
    io.bounce(select_owner_graveyard(lambda card: "beedrill" in card.id))
  id: fireplacerock:83
  rarity: SR
  uuid: megabeedrill
charizard:
  name: Charizard
  type: monster
  cost: 3
  attack: 400
  health: 300
  flavour: Charizard flies around the sky in search of powerful opponents. It breathes
    fire of such great heat that it melts anything. However, it never turns its fiery
    breath on any opponent weaker than itself.
  description: ''
  id: fireplacerock:84
  rarity: C
  uuid: charizard
megacharizardx:
  name: Mega Charizard X
  type: monster
  cost: 5
  attack: 600
  health: 600
  flavour: Must first be summoned by the effect of Mega Bracelet.
  description: 'In the standby phase of each turn: This card gains 200 attack.'
  begin_phase_standby: |-
    self.gain(self, 200)
  id: fireplacerock:85
  rarity: UR
  uuid: megacharizardx
megacharizardy:
  name: Mega Charizard Y
  type: monster
  cost: 5
  attack: 600
  health: 600
  flavour: Must first be summoned by the effect of Mega Bracelet.
  description: This card can attack on the turn it is summoned.
  if_summon: |-
    self.clear_status("CANNOT_ATTACK", source=god)
  id: fireplacerock:86
  rarity: UR
  uuid: megacharizardy
megaheracross:
  name: Mega Heracross
  type: monster
  cost: 8
  attack: 800
  health: 1000
  description: This card cannot attack. In the end phase deal 100 damage 8 times
    randomly to opponent monsters.
  if_summon: |-
    self.apply_status(self, "CANNOT_ATTACK", -1)
  begin_phase_end: |-
    for _ in range(8):
      if len(oppon.field):
        tgt = random.choice(oppon.field)
        tgt.take_damage(100)
        io.check_field(source=self)
  id: fireplacerock:87
  rarity: SR
  can_attack: retval = False
  uuid: megaheracross
megasnorlax:
  name: Mega Snorlax
  type: monster
  cost: 10
  attack: 500
  health: 1500
  description: Opponent minions must attack this monster first. Spells do half damage
    to this monster.
  id: fireplacerock:88
  rarity: SR
  uuid: megasnorlax
scizor:
  name: Scizor
  type: monster
  cost: 3
  attack: 300
  health: 300
  description: ''
  id: fireplacerock:89
  rarity: C
  uuid: scizor
megascizor:
  name: Mega Scizor
  type: monster
  cost: 5
  attack: 300
  health: 400
  description: When this monster enters battle, deal 300 damage to the attacking monster. If it dies, this monster takes no damage. TODO if attacker
  if_attacked: |-
    attacker = args[0]
    attacker_alive_before = attacker.health > 0
    attacker.take_damage(self, 300)
    attacker_alive_after = attacker.health > 0
    self.immune = attacker_alive_before and not attacker_alive_after
  attackee_damage_calc: |-
    if self.immune:
      retval = 0
      self.immune = False
  id: fireplacerock:90
  rarity: SR
  uuid: megascizor
kangaskhan:
  name: Kangaskhan
  type: monster
  cost: 3
  attack: 300
  health: 400
  description: ''
  id: fireplacerock:91
  rarity: C
  uuid: kangaskhan
megakangaskhan:
  name: Mega Kangaskhan
  type: monster
  cost: 7
  attack: 800
  health: 700
  description: This card can attack twice. The second attack does half damage.
  begin_phase_your_standby: |-
    self.num_attacks = 0
  if_summon: |-
    self.num_attacks = 0
  if_attack: |-
    self.num_attacks += 1
  attacker_damage_calc: |-
    if self.num_attacks == 2:
      retval = self.attack // 2
  end_attack: |-
    if self.num_attacks == 1:
      self.clear_status("CANNOT_ATTACK", source=god)
  id: fireplacerock:92
  rarity: R
  uuid: megakangaskhan
sableye:
  name: Sableye
  type: monster
  cost: 1
  attack: 0
  health: 200
  description: 'If this card is summoned, target an enemy monster: Reduce its attack
    by half.'
  id: fireplacerock:93
  rarity: C
  uuid: sableye
megasableye:
  name: Mega Sableye
  type: monster
  cost: 5
  attack: 0
  health: 1000
  description: Your monsters are unaffected by opponent’s card effects.
  id: fireplacerock:94
  rarity: R
  uuid: megasableye
ditto:
  name: Ditto
  type: monster
  cost: 3
  attack: 100
  health: 100
  description: When Ditto is summoned, target one monster on the field. This card
    becomes that card, except for the HP stat.
  id: fireplacerock:95
  rarity: SR
  uuid: ditto
eevee:
  name: Eevee
  type: monster
  cost: 3
  attack: 200
  health: 200
  description: 'If this card is summoned, choose one: Gain 200 attack,
    Gain 200 health, Gain stealth'
  if_summon: |-
    choice = owner.io.prompt_user_select_text([
      "Gain 200 attack",
      "Gain 200 health",
      "Gain stealth",
    ])
    match choice:
      case 0: 
        self.gain(self, 200, 0)
      case 1: 
        self.gain(self, 0, 200)
      case 2: 
        self.apply_status(self, "STEALTH", -1)
  id: fireplacerock:96
  rarity: SR
  uuid: eevee
megabracelet:
  name: Mega Bracelet
  type: field spell
  cost: 1
  description: You can send a Pokemon to the graveyard from your field; Summon
    a Mega Pokemon from your extra deck that mentions it and pay the difference in mana cost
  can_activate_hand: |-
    retval = True
  can_activate: |-
    def is_valid_target(card):
      if "Mega" not in card.name:
        return False
      if card.id not in archetypes.pokemon:
        return False
      for monster in owner.field:
        if (
          "Mega" not in monster.name
          and monster.name in card.name
          and owner.can_pay(card.cost - monster.cost)
          and (
            owner.get_status("MEGABRACELET_USED") is None
            or owner.get_status("MEGABRACELET_USED") == card.id
          )
        ):
          return True
      return False
    ed_targets = owner.extradeck.filter(is_valid_target)
    self.ed_names = [card.name for card in ed_targets]
    has_target = can_select_field(
      lambda card:
        "Mega" not in card.name
        and any(card.name in ed_name for ed_name in self.ed_names)
    )
    retval = has_target
  on_activate_cost: |-
    def is_valid_target(card):
      if "Mega" not in card.name:
        return False
      if card.id not in archetypes.pokemon:
        return False
      for monster in owner.field:
        if (
          "Mega" not in monster.name
          and monster.name in card.name
          and owner.can_pay(card.cost - monster.cost)
          and (
            owner.get_status("MEGABRACELET_USED") is None
            or owner.get_status("MEGABRACELET_USED") == card.id
          )
        ):
          return True
      return False
    ed_targets = owner.extradeck.filter(is_valid_target)
    self.ed_names = [card.name for card in ed_targets]
    self.target = select_field(
      lambda card:
        "Mega" not in card.name
        and any(card.name in ed_name for ed_name in self.ed_names)
    )
    self.mana_discount = self.target.cost
    io.send_graveyard(self.target)
  on_activate: |-
    ed_target = select_owner_extradeck(
      lambda card:
        "Mega" in card.name
        and self.target.name in card.name
        and card.id in archetypes.pokemon
        and owner.can_pay(card.cost - self.mana_discount)
    )
    idx = select_owner_board()
    owner.pay(ed_target.cost - self.mana_discount)
    if not owner.has_status("MEGABRACELET_USED"):
      owner.apply_status(self, "MEGABRACELET_USED", -1, args=ed_target.id)
    io.summon(ed_target, idx)
  id: fireplacerock:97
  rarity: C
  uuid: megabracelet
megamewtwox:
  name: Mega Mewtwo X
  type: monster
  cost: 12
  attack: 600
  health: 1000
  description: When this card is summoned, deal 600 damage to yourself, then you can
    deal 1000 damage to anything, and then 300 damage to all enemies.
  id: fireplacerock:98
  rarity: SR
  uuid: megamewtwox
megamewtwoy:
  name: Mega Mewtwo Y
  type: monster
  cost: 12
  attack: 1000
  health: 600
  description: When this card is summoned, deal 1000 damage to yourself, then you
    can take control of up to two enemy monsters until the end of the next turn and draw 2 cards.
  id: fireplacerock:99
  rarity: SR
  uuid: megamewtwoy
mewtwo:
  name: Mewtwo
  type: monster
  cost: 7
  attack: 500
  health: 600
  description: If this card is sent to the graveyard, you can draw a card.
  id: fireplacerock:100
  rarity: UR
  uuid: mewtwo
pokemonghost:
  name: Pokemon Ghost
  type: monster
  cost: 0
  attack: 100
  health: 100
  flavour: Many years ago, this was a beloved Pokemon. It wanders the Earth searching
    for its former master.
  description: ''
  id: fireplacerock:-1
  rarity: "--"
  uuid: pokemonghost
rainyday:
  name: Rainy Day
  type: field spell
  cost: 2
  description: It is raining. The attack of all monsters are reduced by 100.
  on_owner_summon: |-
    args[0].lose(self, 100)
  on_oppon_summon: |-
    args[0].lose(self, 100)
  on_owner_remove: |-
    args[0].gain(self, 100)
  on_oppon_remove: |-
    args[0].gain(self, 100)
  on_activate_hand: |-
    for card in owner.board:
      if card is not None:
        card.lose(self, 100)
    for card in oppon.board:
      if card is not None:
        card.lose(self, 100)
  on_remove: |-
    for card in owner.board:
      if card is not None:
        card.gain(self, 100)
    for card in oppon.board:
      if card is not None:
        card.gain(self, 100)
  id: fireplacerock:-1
  rarity: "--"
  uuid: rainyday
harshsunlight:
  name: Harsh Sunlight
  type: field spell
  cost: 2
  description: The sunlight is harsh. The attacks of all monsters is increased
    by 100.
  on_owner_summon: |-
    args[0].gain(self, 100)
  on_oppon_summon: |-
    args[0].gain(self, 100)
  on_owner_remove: |-
    args[0].lose(self, 100)
  on_oppon_remove: |-
    args[0].lose(self, 100)
  on_activate_hand: |-
    for card in owner.board:
      if card is not None:
        card.gain(self, 100)
    for card in oppon.board:
      if card is not None:
        card.gain(self, 100)
  on_remove: |-
    for card in owner.board:
      if card is not None:
        card.lose(self, 100)
    for card in oppon.board:
      if card is not None:
        card.lose(self, 100)
  id: fireplacerock:-1
  rarity: "--"
  uuid: harshsunlight
kiljoyturret:
  name: Kiljoy Turret
  type: monster
  cost: 1
  attack: 0
  health: 100
  description: 'You can pay 1 mana; deal 100 damage to the opposing monster and the monsters
    adjacent to it.'
  can_activate: |-
    retval = owner.can_pay(1)
  on_activate: |-
    owner.pay(1)
    for other in get_opposing() + get_opposing_adjacent():
      other.take_damage(self, 100)
  id: fireplacerock:-1
  rarity: "--"
  uuid: kiljoyturret
sunavatar:
  name: Sun Avatar
  type: monster
  cost: 6
  attack: 600
  health: 1000
  description: 'At the beginning of your turn: this card turns into True Sun God.'
  id: fireplacerock:-1
  rarity: "--"
  uuid: sunavatar
truesungod:
  name: True Sun God
  type: monster
  cost: 10
  attack: 600
  health: 1000
  flavour: There can be only one.
  description: When this card is summoned, send all monsters from either side of the
    field to the graveyard. This card’s original attack and health increases by their total
    attack and health.
  id: fireplacerock:-1
  rarity: "--"
  uuid: truesungod
mewthefirstpokemon:
  name: "`Mew`. the First Pokemon"
  type: monster
  cost: 2
  attack: 200
  health: 200
  flavour: So rare that it is still said to be a mirage by many experts. Only a few
    people have seen it worldwide.
  description: Once per turn, you can pay 1 mana, this card’s effect becomes another
    face-up monster’s effect for rest this turn.
  id: fireplacerock:101
  rarity: XR
  uuid: mewthefirstpokemon
lakeofragegyarados:
  name: Lake of Rage `Gyarados`
  type: monster
  cost: 4
  attack: 700
  health: 500
  flavour: This Gyarados was forced to evolve by Team Rocket. The Magikarp it evolves
    from retains its red color, having no time to change its scale color to blue.
  description: This card can only be summoned by tributing a “Magikarp” you control.
    When this card is summoned, reduce the attack of each of your opponent’s monsters
    by 100.
  id: fireplacerock:102
  rarity: XR
  can_summon: |-
    for card in owner.field:
      if "magikarp" in card.name.lower():
        retval = True
      else:
        retval = False
  on_summon: TODO
  uuid: lakeofragegyarados
arceusthecreator:
  name: "`Arceus`, the Creator"
  type: monster
  cost: 10
  attack: 1200
  health: 1200
  flavour: It is the heavenly fount from which pours the light that shines across
    the world. Its luminance guides and protects all Pokémon. Hisuian mythology states
    that Arceus is the creator of all things.
  description: 'Once while face-up on the field: Send all other cards on the field
    to the graveyard.'
  id: fireplacerock:103
  rarity: XR
  uuid: arceusthecreator
mewtwostrikesback:
  name: "`Mewtwo` Strikes Back"
  type: monster
  cost: 7
  attack: 600
  health: 600
  flavour: 'The circumstances of one''s birth are irrelevant: it is what one does
    with life that determines one''s destiny'
  description: When this card is summoned, deal 600 damage to yourself. If this card
    is destroyed, you can add one “Mewtwo” card from your deck to your hand. Reduce
    its mana cost by 2.
  id: fireplacerock:104
  rarity: XR
  uuid: mewtwostrikesback
placeholderxr1:
  name: Placeholder XR 1
  type: ''
  cost: -1
  description: ''
  id: fireplacerock:105
  rarity: XR
  uuid: placeholderxr1
placeholderxr2:
  name: Placeholder XR 2
  type: ''
  cost: -1
  description: ''
  id: fireplacerock:106
  rarity: XR
  uuid: placeholderxr2
placeholderxr3:
  name: Placeholder XR 3
  type: ''
  cost: -1
  description: ''
  id: fireplacerock:107
  rarity: XR
  uuid: placeholderxr3
placeholderxr4:
  name: Placeholder XR 4
  type: ''
  cost: -1
  description: ''
  id: fireplacerock:108
  rarity: XR
  uuid: placeholderxr4
placeholderxr5:
  name: Placeholder XR 5
  type: ''
  cost: -1
  description: ''
  id: fireplacerock:109
  rarity: XR
  uuid: placeholderxr5
placeholderxr6:
  name: Placeholder XR 6
  type: ''
  cost: -1
  description: ''
  id: fireplacerock:110
  rarity: XR
  uuid: placeholderxr6

